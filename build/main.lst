ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB81:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <stdlib.h>
  28:Core/Src/main.c **** #include <stdbool.h>
  29:Core/Src/main.c **** #include "nrf24_comm.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** UART_HandleTypeDef huart1;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** // External declarations
  60:Core/Src/main.c **** extern NRF24_Status_t nrf24_status;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // Local variables
  63:Core/Src/main.c **** uint16_t adc_raw_buffer[4];
  64:Core/Src/main.c **** uint8_t AUX1=0;
  65:Core/Src/main.c **** uint8_t AUX2=0;
  66:Core/Src/main.c **** uint8_t AUX3=0;  // Added AUX3
  67:Core/Src/main.c **** uint8_t uart_buffer[12];  // Single buffer for UART communication
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** // Calibration variables
  70:Core/Src/main.c **** uint16_t adc_center[4];    // Center values for each channel
  71:Core/Src/main.c **** int16_t adc_calib_error[4];      // Calibration error between raw ADC and center values
  72:Core/Src/main.c **** uint16_t adc_min[4];       // Minimum ADC values for each channel
  73:Core/Src/main.c **** uint16_t adc_max[4];       // Maximum ADC values for each channel
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** // Filtering variables
  76:Core/Src/main.c **** float alpha = 0.1;         // Filter coefficient (0-1), lower = more smoothing
  77:Core/Src/main.c **** uint16_t adc_filtered[4];  // Filtered ADC values
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** // Remapping constants
  80:Core/Src/main.c **** #define CENTER_REGION 30   // Center region size (30 around center)
  81:Core/Src/main.c **** #define ADC_MAX 4095       // Maximum ADC value
  82:Core/Src/main.c **** #define ADC_MIN 0          // Minimum ADC value
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** // Buzzer control
  85:Core/Src/main.c **** #define BUZZER_PIN GPIO_PIN_12
  86:Core/Src/main.c **** #define BUZZER_PORT GPIOA
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** Beep_Control_t beep_control = {0};
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** // Function to start a non-blocking beep
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 3


  91:Core/Src/main.c **** static void start_beep(uint32_t duration_ms) {
  92:Core/Src/main.c ****     beep_control.start_time = HAL_GetTick();
  93:Core/Src/main.c ****     beep_control.duration = duration_ms;
  94:Core/Src/main.c ****     beep_control.is_beeping = true;
  95:Core/Src/main.c ****     HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
  96:Core/Src/main.c **** }
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** // Function to update beep state (call in main loop)
  99:Core/Src/main.c **** static void update_beep(void) {
 100:Core/Src/main.c ****     if (beep_control.is_beeping) {
 101:Core/Src/main.c ****         uint32_t current_time = HAL_GetTick();
 102:Core/Src/main.c ****         if (current_time - beep_control.start_time >= beep_control.duration) {
 103:Core/Src/main.c ****             beep_control.is_beeping = false;
 104:Core/Src/main.c ****             HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 105:Core/Src/main.c ****         }
 106:Core/Src/main.c ****     }
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** /* USER CODE END PV */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 111:Core/Src/main.c **** void SystemClock_Config(void);
 112:Core/Src/main.c **** static void MX_GPIO_Init(void);
 113:Core/Src/main.c **** static void MX_DMA_Init(void);
 114:Core/Src/main.c **** static void MX_ADC1_Init(void);
 115:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 116:Core/Src/main.c **** static void MX_I2C1_Init(void);
 117:Core/Src/main.c **** static void MX_SPI2_Init(void);
 118:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 119:Core/Src/main.c **** /* USER CODE END PFP */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 122:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 123:Core/Src/main.c **** uint16_t remap_adc_value(uint16_t raw_value, uint16_t center, uint16_t min_val, uint16_t max_val)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****     // Ensure input is within bounds
 126:Core/Src/main.c ****     if (raw_value > ADC_MAX) raw_value = ADC_MAX;
 127:Core/Src/main.c ****     if (raw_value < ADC_MIN) raw_value = ADC_MIN;
 128:Core/Src/main.c ****     
 129:Core/Src/main.c ****     // If value is in center region, keep it unchanged
 130:Core/Src/main.c ****     if(abs((int16_t)raw_value - (int16_t)center) <= CENTER_REGION) {
 131:Core/Src/main.c ****         return center;
 132:Core/Src/main.c ****     }
 133:Core/Src/main.c ****     
 134:Core/Src/main.c ****     // Calculate mapping for lower region (min_val to center)
 135:Core/Src/main.c ****     if(raw_value < center) {
 136:Core/Src/main.c ****         // Ensure we don't divide by zero
 137:Core/Src/main.c ****         if (min_val >= center) return center;
 138:Core/Src/main.c ****         float ratio = (float)(center - ADC_MIN) / (float)(center - min_val);
 139:Core/Src/main.c ****         int32_t result = center - (int32_t)((center - raw_value) * ratio);
 140:Core/Src/main.c ****         // Ensure result stays within bounds
 141:Core/Src/main.c ****         if (result < ADC_MIN) result = ADC_MIN;
 142:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 143:Core/Src/main.c ****         return (uint16_t)result;
 144:Core/Src/main.c ****     }
 145:Core/Src/main.c ****     // Calculate mapping for upper region (center to max_val)
 146:Core/Src/main.c ****     else {
 147:Core/Src/main.c ****         // Ensure we don't divide by zero
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 4


 148:Core/Src/main.c ****         if (max_val <= center) return center;
 149:Core/Src/main.c ****         float ratio = (float)(ADC_MAX - center) / (float)(max_val - center);
 150:Core/Src/main.c ****         int32_t result = center + (int32_t)((raw_value - center) * ratio);
 151:Core/Src/main.c ****         // Ensure result stays within bounds
 152:Core/Src/main.c ****         if (result < ADC_MIN) result = ADC_MIN;
 153:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 154:Core/Src/main.c ****         return (uint16_t)result;
 155:Core/Src/main.c ****     }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** void filter_adc_values(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****     for(int i = 0; i < 4; i++) {
 161:Core/Src/main.c ****         // Calculate new filtered value with float precision
 162:Core/Src/main.c ****         float new_value = alpha * (float)adc_raw_buffer[i] + (1.0f - alpha) * (float)adc_filtered[i
 163:Core/Src/main.c ****         
 164:Core/Src/main.c ****         // Ensure the filtered value stays within bounds
 165:Core/Src/main.c ****         if (new_value > ADC_MAX) new_value = ADC_MAX;
 166:Core/Src/main.c ****         if (new_value < ADC_MIN) new_value = ADC_MIN;
 167:Core/Src/main.c ****         
 168:Core/Src/main.c ****         // Update the filtered value
 169:Core/Src/main.c ****         adc_filtered[i] = (uint16_t)new_value;
 170:Core/Src/main.c ****     }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /*
 174:Core/Src/main.c **** void pack_and_transmit_uart(void)
 175:Core/Src/main.c **** {
 176:Core/Src/main.c ****     // Apply low-pass filtering
 177:Core/Src/main.c ****     filter_adc_values();
 178:Core/Src/main.c ****     
 179:Core/Src/main.c ****     // Process ADC values directly into tx_buffer
 180:Core/Src/main.c ****     tx_buffer.forward_vel = remap_adc_value(adc_filtered[2], adc_center[2], adc_min[2], adc_max[2])
 181:Core/Src/main.c ****     tx_buffer.left_vel = remap_adc_value(adc_filtered[3], adc_center[3], adc_min[3], adc_max[3]);
 182:Core/Src/main.c ****     tx_buffer.angular_vel = remap_adc_value(adc_filtered[0], adc_center[0], adc_min[0], adc_max[0])
 183:Core/Src/main.c ****     
 184:Core/Src/main.c ****     // Process dribbler
 185:Core/Src/main.c ****     uint16_t dribbler_val = remap_adc_value(adc_filtered[1], adc_center[1], adc_min[1], adc_max[1])
 186:Core/Src/main.c ****     if (dribbler_val > 2048) {
 187:Core/Src/main.c ****         tx_buffer.dribbler = 0xC000 | (dribbler_val & 0x3FFF);
 188:Core/Src/main.c ****     } else {
 189:Core/Src/main.c ****         tx_buffer.dribbler = 0x0000;
 190:Core/Src/main.c ****     }
 191:Core/Src/main.c ****     
 192:Core/Src/main.c ****     // Update kicker states
 193:Core/Src/main.c ****     tx_buffer.kickers = (AUX1 ? 0xF0 : 0x00) | (AUX2 ? 0x0F : 0x00);
 194:Core/Src/main.c ****     
 195:Core/Src/main.c ****     // Pack into UART buffer with frame markers
 196:Core/Src/main.c ****     uart_buffer[0] = FRAME_HEAD;
 197:Core/Src/main.c ****     memcpy(uart_buffer + 1, &tx_buffer, NRF24_TX_BUFFER_SIZE);
 198:Core/Src/main.c ****     uart_buffer[11] = FRAME_END;
 199:Core/Src/main.c ****     
 200:Core/Src/main.c ****     // Transmit via UART
 201:Core/Src/main.c ****     while(huart1.gState != HAL_UART_STATE_READY);
 202:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, uart_buffer, UART_BUFFER_SIZE, 100);
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** */
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** void buzzer_beep(uint32_t duration_ms)
 207:Core/Src/main.c **** {
 208:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 209:Core/Src/main.c ****   HAL_Delay(duration_ms);
 210:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** void double_beep(void)
 214:Core/Src/main.c **** {
 215:Core/Src/main.c ****   buzzer_beep(100);
 216:Core/Src/main.c ****   HAL_Delay(100);
 217:Core/Src/main.c ****   buzzer_beep(100);
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** /* USER CODE END 0 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief  The application entry point.
 223:Core/Src/main.c ****   * @retval int
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** int main(void)
 226:Core/Src/main.c **** {
 227:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 228:Core/Src/main.c ****     /* USER CODE END 1 */
 229:Core/Src/main.c ****     
 230:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 231:Core/Src/main.c ****     HAL_Init();
 232:Core/Src/main.c ****     SystemClock_Config();
 233:Core/Src/main.c ****     
 234:Core/Src/main.c ****     MX_GPIO_Init();
 235:Core/Src/main.c ****     MX_DMA_Init();
 236:Core/Src/main.c ****     MX_ADC1_Init();
 237:Core/Src/main.c ****     MX_USART1_UART_Init();
 238:Core/Src/main.c ****     MX_I2C1_Init();
 239:Core/Src/main.c ****     MX_SPI2_Init();
 240:Core/Src/main.c ****     
 241:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 242:Core/Src/main.c ****     // Initialize buzzer
 243:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, GPIO_PIN_SET);
 244:Core/Src/main.c ****     HAL_Delay(100);
 245:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, GPIO_PIN_RESET);
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****     // Start ADC DMA
 248:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_raw_buffer, 4);
 249:Core/Src/main.c ****     HAL_Delay(100);  // Wait for ADC to stabilize
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     // Initialize NRF24
 252:Core/Src/main.c ****     bool nrf24_init_success = NRF24_Comm_Init();
 253:Core/Src/main.c ****     (void)nrf24_init_success;
 254:Core/Src/main.c ****     HAL_Delay(500);
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     // Wait until AUX3 (PC14) is pressed (input is LOW)
 257:Core/Src/main.c ****     while (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14) != GPIO_PIN_RESET) {
 258:Core/Src/main.c ****     }
 259:Core/Src/main.c ****     
 260:Core/Src/main.c ****     // Turn off LED
 261:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, GPIO_PIN_RESET);
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 6


 262:Core/Src/main.c ****     
 263:Core/Src/main.c ****     // Now do calibration using raw ADC values
 264:Core/Src/main.c ****     adc_center[0] = 2048; // CH1
 265:Core/Src/main.c ****     adc_center[1] = 0;    // CH2
 266:Core/Src/main.c ****     adc_center[2] = 2048; // CH3
 267:Core/Src/main.c ****     adc_center[3] = 2048; // CH4
 268:Core/Src/main.c ****     
 269:Core/Src/main.c ****     // Set min/max values for each channel
 270:Core/Src/main.c ****     adc_min[0] = 68;    // CH1 min
 271:Core/Src/main.c ****     adc_max[0] = 4098;  // CH1 max
 272:Core/Src/main.c ****     adc_min[1] = 0;     // CH2 min
 273:Core/Src/main.c ****     adc_max[1] = 4027;  // CH2 max
 274:Core/Src/main.c ****     adc_min[2] = 88;    // CH3 min
 275:Core/Src/main.c ****     adc_max[2] = 4119;  // CH3 max
 276:Core/Src/main.c ****     adc_min[3] = 114;   // CH4 min
 277:Core/Src/main.c ****     adc_max[3] = 4147;  // CH4 max
 278:Core/Src/main.c ****     
 279:Core/Src/main.c ****     // Calculate errors between raw ADC values and center values
 280:Core/Src/main.c ****     for(int i = 0; i < 4; i++) {
 281:Core/Src/main.c ****         adc_calib_error[i] = (int16_t)adc_raw_buffer[i] - (int16_t)adc_center[i];
 282:Core/Src/main.c ****     }
 283:Core/Src/main.c ****     
 284:Core/Src/main.c ****     // Initialize filtered values with current raw values
 285:Core/Src/main.c ****     for(int i = 0; i < 4; i++) {
 286:Core/Src/main.c ****         adc_filtered[i] = adc_raw_buffer[i];
 287:Core/Src/main.c ****     }
 288:Core/Src/main.c ****     
 289:Core/Src/main.c ****     // Double beep to indicate calibration complete
 290:Core/Src/main.c ****     double_beep();
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****     // NOW start UART reception after calibration
 293:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart1, uart_buffer, UART_BUFFER_SIZE);
 294:Core/Src/main.c ****     
 295:Core/Src/main.c ****     while (1)
 296:Core/Src/main.c ****     {
 297:Core/Src/main.c ****         // Update beep state
 298:Core/Src/main.c ****         update_beep();
 299:Core/Src/main.c ****         
 300:Core/Src/main.c ****         // Check for UART timeout
 301:Core/Src/main.c ****         // if (nrf24_status.control_mode == CONTROL_MODE_UPLEVEL_UART) {
 302:Core/Src/main.c ****         //     uint32_t current_time = HAL_GetTick();
 303:Core/Src/main.c ****         //     if (current_time - nrf24_status.last_uart_time > UART_TIMEOUT_MS) {
 304:Core/Src/main.c ****         //         // Switch back to joystick control if no UART data received
 305:Core/Src/main.c ****         //         nrf24_status.control_mode = CONTROL_MODE_JOYSTICK;
 306:Core/Src/main.c ****         //     }
 307:Core/Src/main.c ****         // }
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****         // if (NRF24_Comm_CanLocalControlWrite()) {
 310:Core/Src/main.c ****         //     filter_adc_values();
 311:Core/Src/main.c ****             
 312:Core/Src/main.c ****         //     uint16_t adc_processed_values[4];
 313:Core/Src/main.c ****         //     for(int i = 0; i < 4; i++) {
 314:Core/Src/main.c ****         //         // Use signed arithmetic for error compensation
 315:Core/Src/main.c ****         //         int32_t value = (int32_t)adc_filtered[i] - (int32_t)adc_calib_error[i];
 316:Core/Src/main.c ****                 
 317:Core/Src/main.c ****         //         // Bound check the result
 318:Core/Src/main.c ****         //         if (value < ADC_MIN) value = ADC_MIN;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 7


 319:Core/Src/main.c ****         //         if (value > ADC_MAX) value = ADC_MAX;
 320:Core/Src/main.c ****                 
 321:Core/Src/main.c ****         //         // Convert back to uint16_t after bounds checking
 322:Core/Src/main.c ****         //         uint16_t compensated = (uint16_t)value;
 323:Core/Src/main.c ****                 
 324:Core/Src/main.c ****         //         // Now do the remapping
 325:Core/Src/main.c ****         //         adc_processed_values[i] = remap_adc_value(compensated, adc_center[i], adc_min[i]
 326:Core/Src/main.c ****         //     }
 327:Core/Src/main.c ****             
 328:Core/Src/main.c ****         //     NRF24_Comm_UpdateTxBuffer(adc_processed_values, AUX1, AUX2);
 329:Core/Src/main.c ****         // }
 330:Core/Src/main.c ****         
 331:Core/Src/main.c ****         NRF24_Comm_Transmit();
 332:Core/Src/main.c ****         NRF24_Comm_StatusFeedback();
 333:Core/Src/main.c ****     }
 334:Core/Src/main.c **** }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** /**
 337:Core/Src/main.c ****   * @brief System Clock Configuration
 338:Core/Src/main.c ****   * @retval None
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c **** void SystemClock_Config(void)
 341:Core/Src/main.c **** {
 342:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 343:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 344:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 347:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 350:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 351:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 352:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 353:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 354:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 355:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****     Error_Handler();
 358:Core/Src/main.c ****   }
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 361:Core/Src/main.c ****   */
 362:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 363:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 364:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 365:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 366:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 367:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 370:Core/Src/main.c ****   {
 371:Core/Src/main.c ****     Error_Handler();
 372:Core/Src/main.c ****   }
 373:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 374:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 375:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 8


 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c **** }
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 383:Core/Src/main.c ****   * @param None
 384:Core/Src/main.c ****   * @retval None
 385:Core/Src/main.c ****   */
 386:Core/Src/main.c **** static void MX_ADC1_Init(void)
 387:Core/Src/main.c **** {
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /** Common config
 400:Core/Src/main.c ****   */
 401:Core/Src/main.c ****   hadc1.Instance = ADC1;
 402:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 403:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 404:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 405:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 406:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 407:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 408:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /** Configure Regular Channel
 414:Core/Src/main.c ****   */
 415:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 416:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 417:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 418:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     Error_Handler();
 421:Core/Src/main.c ****   }
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /** Configure Regular Channel
 424:Core/Src/main.c ****   */
 425:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 426:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 427:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /** Configure Regular Channel
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 9


 433:Core/Src/main.c ****   */
 434:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 435:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 436:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 437:Core/Src/main.c ****   {
 438:Core/Src/main.c ****     Error_Handler();
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /** Configure Regular Channel
 442:Core/Src/main.c ****   */
 443:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 444:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 445:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 446:Core/Src/main.c ****   {
 447:Core/Src/main.c ****     Error_Handler();
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** /**
 456:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 457:Core/Src/main.c ****   * @param None
 458:Core/Src/main.c ****   * @retval None
 459:Core/Src/main.c ****   */
 460:Core/Src/main.c **** static void MX_I2C1_Init(void)
 461:Core/Src/main.c **** {
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 470:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 471:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 200000;
 472:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 473:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 474:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 475:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 476:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 477:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 478:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 479:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 480:Core/Src/main.c ****   {
 481:Core/Src/main.c ****     Error_Handler();
 482:Core/Src/main.c ****   }
 483:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** }
 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** /**
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 10


 490:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 491:Core/Src/main.c ****   * @param None
 492:Core/Src/main.c ****   * @retval None
 493:Core/Src/main.c ****   */
 494:Core/Src/main.c **** static void MX_SPI2_Init(void)
 495:Core/Src/main.c **** {
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 504:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 505:Core/Src/main.c ****   hspi2.Instance = SPI2;
 506:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 507:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 508:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 509:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 510:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 511:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 512:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 513:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 514:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 515:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 516:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 517:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 518:Core/Src/main.c ****   {
 519:Core/Src/main.c ****     Error_Handler();
 520:Core/Src/main.c ****   }
 521:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** }
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** /**
 528:Core/Src/main.c ****   * @brief USART1 Initialization Function
 529:Core/Src/main.c ****   * @param None
 530:Core/Src/main.c ****   * @retval None
 531:Core/Src/main.c ****   */
 532:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 533:Core/Src/main.c **** {
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 542:Core/Src/main.c ****   huart1.Instance = USART1;
 543:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 544:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 545:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_2;
 546:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 11


 547:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 548:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 549:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 550:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 551:Core/Src/main.c ****   {
 552:Core/Src/main.c ****     Error_Handler();
 553:Core/Src/main.c ****   }
 554:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** }
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** /**
 561:Core/Src/main.c ****   * Enable DMA controller clock
 562:Core/Src/main.c ****   */
 563:Core/Src/main.c **** static void MX_DMA_Init(void)
 564:Core/Src/main.c **** {
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /* DMA controller clock enable */
 567:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* DMA interrupt init */
 570:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 571:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 572:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /**
 577:Core/Src/main.c ****   * @brief GPIO Initialization Function
 578:Core/Src/main.c ****   * @param None
 579:Core/Src/main.c ****   * @retval None
 580:Core/Src/main.c ****   */
 581:Core/Src/main.c **** static void MX_GPIO_Init(void)
 582:Core/Src/main.c **** {
  26              		.loc 1 582 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 36
  33              		.cfi_offset 4, -36
  34              		.cfi_offset 5, -32
  35              		.cfi_offset 6, -28
  36              		.cfi_offset 7, -24
  37              		.cfi_offset 8, -20
  38              		.cfi_offset 9, -16
  39              		.cfi_offset 10, -12
  40              		.cfi_offset 11, -8
  41              		.cfi_offset 14, -4
  42 0004 89B0     		sub	sp, sp, #36
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 72
 583:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 583 3 view .LVU1
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 12


  46              		.loc 1 583 20 is_stmt 0 view .LVU2
  47 0006 04AD     		add	r5, sp, #16
  48 0008 0024     		movs	r4, #0
  49 000a 0494     		str	r4, [sp, #16]
  50 000c 0594     		str	r4, [sp, #20]
  51 000e 0694     		str	r4, [sp, #24]
  52 0010 0794     		str	r4, [sp, #28]
 584:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 585:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 588:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 588 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 588 3 view .LVU4
  56              		.loc 1 588 3 view .LVU5
  57 0012 564B     		ldr	r3, .L3
  58 0014 9A69     		ldr	r2, [r3, #24]
  59 0016 42F01002 		orr	r2, r2, #16
  60 001a 9A61     		str	r2, [r3, #24]
  61              		.loc 1 588 3 view .LVU6
  62 001c 9A69     		ldr	r2, [r3, #24]
  63 001e 02F01002 		and	r2, r2, #16
  64 0022 0192     		str	r2, [sp, #4]
  65              		.loc 1 588 3 view .LVU7
  66 0024 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 588 3 view .LVU8
 589:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  69              		.loc 1 589 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 589 3 view .LVU10
  72              		.loc 1 589 3 view .LVU11
  73 0026 9A69     		ldr	r2, [r3, #24]
  74 0028 42F00402 		orr	r2, r2, #4
  75 002c 9A61     		str	r2, [r3, #24]
  76              		.loc 1 589 3 view .LVU12
  77 002e 9A69     		ldr	r2, [r3, #24]
  78 0030 02F00402 		and	r2, r2, #4
  79 0034 0292     		str	r2, [sp, #8]
  80              		.loc 1 589 3 view .LVU13
  81 0036 029A     		ldr	r2, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 589 3 view .LVU14
 590:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 590 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 590 3 view .LVU16
  87              		.loc 1 590 3 view .LVU17
  88 0038 9A69     		ldr	r2, [r3, #24]
  89 003a 42F00802 		orr	r2, r2, #8
  90 003e 9A61     		str	r2, [r3, #24]
  91              		.loc 1 590 3 view .LVU18
  92 0040 9B69     		ldr	r3, [r3, #24]
  93 0042 03F00803 		and	r3, r3, #8
  94 0046 0393     		str	r3, [sp, #12]
  95              		.loc 1 590 3 view .LVU19
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 13


  96 0048 039B     		ldr	r3, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 590 3 view .LVU20
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 593:Core/Src/main.c ****   HAL_GPIO_WritePin(CSN_GPIO_Port, CSN_Pin, GPIO_PIN_RESET);
  99              		.loc 1 593 3 view .LVU21
 100 004a DFF82481 		ldr	r8, .L3+4
 101 004e 2246     		mov	r2, r4
 102 0050 4FF48051 		mov	r1, #4096
 103 0054 4046     		mov	r0, r8
 104 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL0:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 596:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, CE_Pin|GPIO_PIN_12, GPIO_PIN_RESET);
 106              		.loc 1 596 3 view .LVU22
 107 005a 464F     		ldr	r7, .L3+8
 108 005c 2246     		mov	r2, r4
 109 005e 4FF4C051 		mov	r1, #6144
 110 0062 3846     		mov	r0, r7
 111 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL1:
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /*Configure GPIO pin : PC14 */
 599:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 113              		.loc 1 599 3 view .LVU23
 114              		.loc 1 599 23 is_stmt 0 view .LVU24
 115 0068 4FF48043 		mov	r3, #16384
 116 006c 0493     		str	r3, [sp, #16]
 600:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 117              		.loc 1 600 3 is_stmt 1 view .LVU25
 118              		.loc 1 600 24 is_stmt 0 view .LVU26
 119 006e 0594     		str	r4, [sp, #20]
 601:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 120              		.loc 1 601 3 is_stmt 1 view .LVU27
 121              		.loc 1 601 24 is_stmt 0 view .LVU28
 122 0070 0126     		movs	r6, #1
 123 0072 0696     		str	r6, [sp, #24]
 602:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 124              		.loc 1 602 3 is_stmt 1 view .LVU29
 125 0074 2946     		mov	r1, r5
 126 0076 4048     		ldr	r0, .L3+12
 127 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /*Configure GPIO pins : KEY5_Pin KEY6_Pin */
 605:Core/Src/main.c ****   GPIO_InitStruct.Pin = KEY5_Pin|KEY6_Pin;
 129              		.loc 1 605 3 view .LVU30
 130              		.loc 1 605 23 is_stmt 0 view .LVU31
 131 007c C023     		movs	r3, #192
 132 007e 0493     		str	r3, [sp, #16]
 606:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 133              		.loc 1 606 3 is_stmt 1 view .LVU32
 134              		.loc 1 606 24 is_stmt 0 view .LVU33
 135 0080 DFF8F8A0 		ldr	r10, .L3+16
 136 0084 CDF814A0 		str	r10, [sp, #20]
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 14


 607:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 137              		.loc 1 607 3 is_stmt 1 view .LVU34
 138              		.loc 1 607 24 is_stmt 0 view .LVU35
 139 0088 0696     		str	r6, [sp, #24]
 608:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 140              		.loc 1 608 3 is_stmt 1 view .LVU36
 141 008a 2946     		mov	r1, r5
 142 008c 3846     		mov	r0, r7
 143 008e FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL3:
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /*Configure GPIO pins : KEY7_Pin KEY8_Pin */
 611:Core/Src/main.c ****   GPIO_InitStruct.Pin = KEY7_Pin|KEY8_Pin;
 145              		.loc 1 611 3 view .LVU37
 146              		.loc 1 611 23 is_stmt 0 view .LVU38
 147 0092 4FF00309 		mov	r9, #3
 148 0096 CDF81090 		str	r9, [sp, #16]
 612:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 149              		.loc 1 612 3 is_stmt 1 view .LVU39
 150              		.loc 1 612 24 is_stmt 0 view .LVU40
 151 009a CDF814A0 		str	r10, [sp, #20]
 613:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 152              		.loc 1 613 3 is_stmt 1 view .LVU41
 153              		.loc 1 613 24 is_stmt 0 view .LVU42
 154 009e 0696     		str	r6, [sp, #24]
 614:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 155              		.loc 1 614 3 is_stmt 1 view .LVU43
 156 00a0 2946     		mov	r1, r5
 157 00a2 4046     		mov	r0, r8
 158 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL4:
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /*Configure GPIO pin : KEY2_Pin */
 617:Core/Src/main.c ****   GPIO_InitStruct.Pin = KEY2_Pin;
 160              		.loc 1 617 3 view .LVU44
 161              		.loc 1 617 23 is_stmt 0 view .LVU45
 162 00a8 4FF4006B 		mov	fp, #2048
 163 00ac CDF810B0 		str	fp, [sp, #16]
 618:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 164              		.loc 1 618 3 is_stmt 1 view .LVU46
 165              		.loc 1 618 24 is_stmt 0 view .LVU47
 166 00b0 334B     		ldr	r3, .L3+20
 167 00b2 0593     		str	r3, [sp, #20]
 619:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 168              		.loc 1 619 3 is_stmt 1 view .LVU48
 169              		.loc 1 619 24 is_stmt 0 view .LVU49
 170 00b4 0696     		str	r6, [sp, #24]
 620:Core/Src/main.c ****   HAL_GPIO_Init(KEY2_GPIO_Port, &GPIO_InitStruct);
 171              		.loc 1 620 3 is_stmt 1 view .LVU50
 172 00b6 2946     		mov	r1, r5
 173 00b8 4046     		mov	r0, r8
 174 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 175              	.LVL5:
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****   /*Configure GPIO pin : CSN_Pin */
 623:Core/Src/main.c ****   GPIO_InitStruct.Pin = CSN_Pin;
 176              		.loc 1 623 3 view .LVU51
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 15


 177              		.loc 1 623 23 is_stmt 0 view .LVU52
 178 00be 4FF48052 		mov	r2, #4096
 179 00c2 0492     		str	r2, [sp, #16]
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 180              		.loc 1 624 3 is_stmt 1 view .LVU53
 181              		.loc 1 624 24 is_stmt 0 view .LVU54
 182 00c4 0596     		str	r6, [sp, #20]
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 625 3 is_stmt 1 view .LVU55
 184              		.loc 1 625 24 is_stmt 0 view .LVU56
 185 00c6 0694     		str	r4, [sp, #24]
 626:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 186              		.loc 1 626 3 is_stmt 1 view .LVU57
 187              		.loc 1 626 25 is_stmt 0 view .LVU58
 188 00c8 CDF81C90 		str	r9, [sp, #28]
 627:Core/Src/main.c ****   HAL_GPIO_Init(CSN_GPIO_Port, &GPIO_InitStruct);
 189              		.loc 1 627 3 is_stmt 1 view .LVU59
 190 00cc 2946     		mov	r1, r5
 191 00ce 4046     		mov	r0, r8
 192 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL6:
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /*Configure GPIO pin : IRQ_Pin */
 630:Core/Src/main.c ****   GPIO_InitStruct.Pin = IRQ_Pin;
 194              		.loc 1 630 3 view .LVU60
 195              		.loc 1 630 23 is_stmt 0 view .LVU61
 196 00d4 4FF48073 		mov	r3, #256
 197 00d8 0493     		str	r3, [sp, #16]
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 198              		.loc 1 631 3 is_stmt 1 view .LVU62
 199              		.loc 1 631 24 is_stmt 0 view .LVU63
 200 00da CDF814A0 		str	r10, [sp, #20]
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 201              		.loc 1 632 3 is_stmt 1 view .LVU64
 202              		.loc 1 632 24 is_stmt 0 view .LVU65
 203 00de 0694     		str	r4, [sp, #24]
 633:Core/Src/main.c ****   HAL_GPIO_Init(IRQ_GPIO_Port, &GPIO_InitStruct);
 204              		.loc 1 633 3 is_stmt 1 view .LVU66
 205 00e0 2946     		mov	r1, r5
 206 00e2 3846     		mov	r0, r7
 207 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL7:
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   /*Configure GPIO pin : CE_Pin */
 636:Core/Src/main.c ****   GPIO_InitStruct.Pin = CE_Pin;
 209              		.loc 1 636 3 view .LVU67
 210              		.loc 1 636 23 is_stmt 0 view .LVU68
 211 00e8 CDF810B0 		str	fp, [sp, #16]
 637:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 212              		.loc 1 637 3 is_stmt 1 view .LVU69
 213              		.loc 1 637 24 is_stmt 0 view .LVU70
 214 00ec 0596     		str	r6, [sp, #20]
 638:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 215              		.loc 1 638 3 is_stmt 1 view .LVU71
 216              		.loc 1 638 24 is_stmt 0 view .LVU72
 217 00ee 0694     		str	r4, [sp, #24]
 639:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 16


 218              		.loc 1 639 3 is_stmt 1 view .LVU73
 219              		.loc 1 639 25 is_stmt 0 view .LVU74
 220 00f0 CDF81C90 		str	r9, [sp, #28]
 640:Core/Src/main.c ****   HAL_GPIO_Init(CE_GPIO_Port, &GPIO_InitStruct);
 221              		.loc 1 640 3 is_stmt 1 view .LVU75
 222 00f4 2946     		mov	r1, r5
 223 00f6 3846     		mov	r0, r7
 224 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 225              	.LVL8:
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   /*Configure GPIO pin : PA12 */
 643:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
 226              		.loc 1 643 3 view .LVU76
 227              		.loc 1 643 23 is_stmt 0 view .LVU77
 228 00fc 4FF48052 		mov	r2, #4096
 229 0100 0492     		str	r2, [sp, #16]
 644:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 230              		.loc 1 644 3 is_stmt 1 view .LVU78
 231              		.loc 1 644 24 is_stmt 0 view .LVU79
 232 0102 0596     		str	r6, [sp, #20]
 645:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 233              		.loc 1 645 3 is_stmt 1 view .LVU80
 234              		.loc 1 645 24 is_stmt 0 view .LVU81
 235 0104 0694     		str	r4, [sp, #24]
 646:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 236              		.loc 1 646 3 is_stmt 1 view .LVU82
 237              		.loc 1 646 25 is_stmt 0 view .LVU83
 238 0106 0223     		movs	r3, #2
 239 0108 0793     		str	r3, [sp, #28]
 647:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 240              		.loc 1 647 3 is_stmt 1 view .LVU84
 241 010a 2946     		mov	r1, r5
 242 010c 3846     		mov	r0, r7
 243 010e FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL9:
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****   /*Configure GPIO pin : KEY1_Pin */
 650:Core/Src/main.c ****   GPIO_InitStruct.Pin = KEY1_Pin;
 245              		.loc 1 650 3 view .LVU85
 246              		.loc 1 650 23 is_stmt 0 view .LVU86
 247 0112 4FF40043 		mov	r3, #32768
 248 0116 0493     		str	r3, [sp, #16]
 651:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 249              		.loc 1 651 3 is_stmt 1 view .LVU87
 250              		.loc 1 651 24 is_stmt 0 view .LVU88
 251 0118 194B     		ldr	r3, .L3+20
 252 011a 0593     		str	r3, [sp, #20]
 652:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 253              		.loc 1 652 3 is_stmt 1 view .LVU89
 254              		.loc 1 652 24 is_stmt 0 view .LVU90
 255 011c 0696     		str	r6, [sp, #24]
 653:Core/Src/main.c ****   HAL_GPIO_Init(KEY1_GPIO_Port, &GPIO_InitStruct);
 256              		.loc 1 653 3 is_stmt 1 view .LVU91
 257 011e 2946     		mov	r1, r5
 258 0120 3846     		mov	r0, r7
 259 0122 FFF7FEFF 		bl	HAL_GPIO_Init
 260              	.LVL10:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 17


 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   /* EXTI interrupt init*/
 656:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 261              		.loc 1 656 3 view .LVU92
 262 0126 2246     		mov	r2, r4
 263 0128 2146     		mov	r1, r4
 264 012a 0620     		movs	r0, #6
 265 012c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 266              	.LVL11:
 657:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 267              		.loc 1 657 3 view .LVU93
 268 0130 0620     		movs	r0, #6
 269 0132 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 270              	.LVL12:
 658:Core/Src/main.c **** 
 659:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 271              		.loc 1 659 3 view .LVU94
 272 0136 2246     		mov	r2, r4
 273 0138 2146     		mov	r1, r4
 274 013a 0720     		movs	r0, #7
 275 013c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 276              	.LVL13:
 660:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 277              		.loc 1 660 3 view .LVU95
 278 0140 0720     		movs	r0, #7
 279 0142 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 280              	.LVL14:
 661:Core/Src/main.c **** 
 662:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 281              		.loc 1 662 3 view .LVU96
 282 0146 2246     		mov	r2, r4
 283 0148 2146     		mov	r1, r4
 284 014a 1720     		movs	r0, #23
 285 014c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 286              	.LVL15:
 663:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 287              		.loc 1 663 3 view .LVU97
 288 0150 1720     		movs	r0, #23
 289 0152 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 290              	.LVL16:
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 291              		.loc 1 665 3 view .LVU98
 292 0156 2246     		mov	r2, r4
 293 0158 2146     		mov	r1, r4
 294 015a 2820     		movs	r0, #40
 295 015c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 296              	.LVL17:
 666:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 297              		.loc 1 666 3 view .LVU99
 298 0160 2820     		movs	r0, #40
 299 0162 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 300              	.LVL18:
 667:Core/Src/main.c **** 
 668:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 669:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 670:Core/Src/main.c **** }
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 18


 301              		.loc 1 670 1 is_stmt 0 view .LVU100
 302 0166 09B0     		add	sp, sp, #36
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 36
 305              		@ sp needed
 306 0168 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 307              	.L4:
 308              		.align	2
 309              	.L3:
 310 016c 00100240 		.word	1073876992
 311 0170 000C0140 		.word	1073810432
 312 0174 00080140 		.word	1073809408
 313 0178 00100140 		.word	1073811456
 314 017c 00002110 		.word	270598144
 315 0180 00003110 		.word	271646720
 316              		.cfi_endproc
 317              	.LFE81:
 319              		.section	.text.MX_DMA_Init,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	MX_DMA_Init:
 326              	.LFB80:
 564:Core/Src/main.c **** 
 327              		.loc 1 564 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 00B5     		push	{lr}
 332              	.LCFI3:
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 14, -4
 335 0002 83B0     		sub	sp, sp, #12
 336              	.LCFI4:
 337              		.cfi_def_cfa_offset 16
 567:Core/Src/main.c **** 
 338              		.loc 1 567 3 view .LVU102
 339              	.LBB7:
 567:Core/Src/main.c **** 
 340              		.loc 1 567 3 view .LVU103
 567:Core/Src/main.c **** 
 341              		.loc 1 567 3 view .LVU104
 342 0004 0A4B     		ldr	r3, .L7
 343 0006 5A69     		ldr	r2, [r3, #20]
 344 0008 42F00102 		orr	r2, r2, #1
 345 000c 5A61     		str	r2, [r3, #20]
 567:Core/Src/main.c **** 
 346              		.loc 1 567 3 view .LVU105
 347 000e 5B69     		ldr	r3, [r3, #20]
 348 0010 03F00103 		and	r3, r3, #1
 349 0014 0193     		str	r3, [sp, #4]
 567:Core/Src/main.c **** 
 350              		.loc 1 567 3 view .LVU106
 351 0016 019B     		ldr	r3, [sp, #4]
 352              	.LBE7:
 567:Core/Src/main.c **** 
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 19


 353              		.loc 1 567 3 view .LVU107
 571:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 354              		.loc 1 571 3 view .LVU108
 355 0018 0022     		movs	r2, #0
 356 001a 1146     		mov	r1, r2
 357 001c 0B20     		movs	r0, #11
 358 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 359              	.LVL19:
 572:Core/Src/main.c **** 
 360              		.loc 1 572 3 view .LVU109
 361 0022 0B20     		movs	r0, #11
 362 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 363              	.LVL20:
 574:Core/Src/main.c **** 
 364              		.loc 1 574 1 is_stmt 0 view .LVU110
 365 0028 03B0     		add	sp, sp, #12
 366              	.LCFI5:
 367              		.cfi_def_cfa_offset 4
 368              		@ sp needed
 369 002a 5DF804FB 		ldr	pc, [sp], #4
 370              	.L8:
 371 002e 00BF     		.align	2
 372              	.L7:
 373 0030 00100240 		.word	1073876992
 374              		.cfi_endproc
 375              	.LFE80:
 377              		.section	.text.update_beep,"ax",%progbits
 378              		.align	1
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	update_beep:
 384              	.LFB69:
  99:Core/Src/main.c ****     if (beep_control.is_beeping) {
 385              		.loc 1 99 31 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 08B5     		push	{r3, lr}
 390              	.LCFI6:
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 3, -8
 393              		.cfi_offset 14, -4
 100:Core/Src/main.c ****         uint32_t current_time = HAL_GetTick();
 394              		.loc 1 100 5 view .LVU112
 100:Core/Src/main.c ****         uint32_t current_time = HAL_GetTick();
 395              		.loc 1 100 21 is_stmt 0 view .LVU113
 396 0002 0A4B     		ldr	r3, .L13
 397 0004 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 100:Core/Src/main.c ****         uint32_t current_time = HAL_GetTick();
 398              		.loc 1 100 8 view .LVU114
 399 0006 03B9     		cbnz	r3, .L12
 400              	.L9:
 107:Core/Src/main.c **** /* USER CODE END PV */
 401              		.loc 1 107 1 view .LVU115
 402 0008 08BD     		pop	{r3, pc}
 403              	.L12:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 20


 404              	.LBB8:
 101:Core/Src/main.c ****         if (current_time - beep_control.start_time >= beep_control.duration) {
 405              		.loc 1 101 9 is_stmt 1 view .LVU116
 101:Core/Src/main.c ****         if (current_time - beep_control.start_time >= beep_control.duration) {
 406              		.loc 1 101 33 is_stmt 0 view .LVU117
 407 000a FFF7FEFF 		bl	HAL_GetTick
 408              	.LVL21:
 102:Core/Src/main.c ****             beep_control.is_beeping = false;
 409              		.loc 1 102 9 is_stmt 1 view .LVU118
 102:Core/Src/main.c ****             beep_control.is_beeping = false;
 410              		.loc 1 102 40 is_stmt 0 view .LVU119
 411 000e 074B     		ldr	r3, .L13
 412 0010 1A68     		ldr	r2, [r3]
 102:Core/Src/main.c ****             beep_control.is_beeping = false;
 413              		.loc 1 102 26 view .LVU120
 414 0012 801A     		subs	r0, r0, r2
 415              	.LVL22:
 102:Core/Src/main.c ****             beep_control.is_beeping = false;
 416              		.loc 1 102 67 view .LVU121
 417 0014 5B68     		ldr	r3, [r3, #4]
 102:Core/Src/main.c ****             beep_control.is_beeping = false;
 418              		.loc 1 102 12 view .LVU122
 419 0016 9842     		cmp	r0, r3
 420 0018 F6D3     		bcc	.L9
 103:Core/Src/main.c ****             HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 421              		.loc 1 103 13 is_stmt 1 view .LVU123
 103:Core/Src/main.c ****             HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 422              		.loc 1 103 37 is_stmt 0 view .LVU124
 423 001a 0022     		movs	r2, #0
 424 001c 034B     		ldr	r3, .L13
 425 001e 1A72     		strb	r2, [r3, #8]
 104:Core/Src/main.c ****         }
 426              		.loc 1 104 13 is_stmt 1 view .LVU125
 427 0020 4FF48051 		mov	r1, #4096
 428 0024 0248     		ldr	r0, .L13+4
 429 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 430              	.LVL23:
 431              	.LBE8:
 107:Core/Src/main.c **** /* USER CODE END PV */
 432              		.loc 1 107 1 is_stmt 0 view .LVU126
 433 002a EDE7     		b	.L9
 434              	.L14:
 435              		.align	2
 436              	.L13:
 437 002c 00000000 		.word	beep_control
 438 0030 00080140 		.word	1073809408
 439              		.cfi_endproc
 440              	.LFE69:
 442              		.section	.text.start_beep,"ax",%progbits
 443              		.align	1
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	start_beep:
 449              	.LVL24:
 450              	.LFB68:
  91:Core/Src/main.c ****     beep_control.start_time = HAL_GetTick();
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 21


 451              		.loc 1 91 46 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Core/Src/main.c ****     beep_control.start_time = HAL_GetTick();
 455              		.loc 1 91 46 is_stmt 0 view .LVU128
 456 0000 10B5     		push	{r4, lr}
 457              	.LCFI7:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 4, -8
 460              		.cfi_offset 14, -4
 461 0002 0446     		mov	r4, r0
  92:Core/Src/main.c ****     beep_control.duration = duration_ms;
 462              		.loc 1 92 5 is_stmt 1 view .LVU129
  92:Core/Src/main.c ****     beep_control.duration = duration_ms;
 463              		.loc 1 92 31 is_stmt 0 view .LVU130
 464 0004 FFF7FEFF 		bl	HAL_GetTick
 465              	.LVL25:
  92:Core/Src/main.c ****     beep_control.duration = duration_ms;
 466              		.loc 1 92 29 discriminator 1 view .LVU131
 467 0008 054B     		ldr	r3, .L17
 468 000a 1860     		str	r0, [r3]
  93:Core/Src/main.c ****     beep_control.is_beeping = true;
 469              		.loc 1 93 5 is_stmt 1 view .LVU132
  93:Core/Src/main.c ****     beep_control.is_beeping = true;
 470              		.loc 1 93 27 is_stmt 0 view .LVU133
 471 000c 5C60     		str	r4, [r3, #4]
  94:Core/Src/main.c ****     HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 472              		.loc 1 94 5 is_stmt 1 view .LVU134
  94:Core/Src/main.c ****     HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 473              		.loc 1 94 29 is_stmt 0 view .LVU135
 474 000e 0122     		movs	r2, #1
 475 0010 1A72     		strb	r2, [r3, #8]
  95:Core/Src/main.c **** }
 476              		.loc 1 95 5 is_stmt 1 view .LVU136
 477 0012 4FF48051 		mov	r1, #4096
 478 0016 0348     		ldr	r0, .L17+4
 479 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 480              	.LVL26:
  96:Core/Src/main.c **** 
 481              		.loc 1 96 1 is_stmt 0 view .LVU137
 482 001c 10BD     		pop	{r4, pc}
 483              	.LVL27:
 484              	.L18:
  96:Core/Src/main.c **** 
 485              		.loc 1 96 1 view .LVU138
 486 001e 00BF     		.align	2
 487              	.L17:
 488 0020 00000000 		.word	beep_control
 489 0024 00080140 		.word	1073809408
 490              		.cfi_endproc
 491              	.LFE68:
 493              		.section	.text.remap_adc_value,"ax",%progbits
 494              		.align	1
 495              		.global	remap_adc_value
 496              		.syntax unified
 497              		.thumb
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 22


 498              		.thumb_func
 500              	remap_adc_value:
 501              	.LVL28:
 502              	.LFB70:
 124:Core/Src/main.c ****     // Ensure input is within bounds
 503              		.loc 1 124 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 124:Core/Src/main.c ****     // Ensure input is within bounds
 507              		.loc 1 124 1 is_stmt 0 view .LVU140
 508 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 509              	.LCFI8:
 510              		.cfi_def_cfa_offset 24
 511              		.cfi_offset 3, -24
 512              		.cfi_offset 4, -20
 513              		.cfi_offset 5, -16
 514              		.cfi_offset 6, -12
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 0546     		mov	r5, r0
 518 0004 0C46     		mov	r4, r1
 519 0006 1746     		mov	r7, r2
 520 0008 1E46     		mov	r6, r3
 126:Core/Src/main.c ****     if (raw_value < ADC_MIN) raw_value = ADC_MIN;
 521              		.loc 1 126 5 is_stmt 1 view .LVU141
 126:Core/Src/main.c ****     if (raw_value < ADC_MIN) raw_value = ADC_MIN;
 522              		.loc 1 126 8 is_stmt 0 view .LVU142
 523 000a B0F5805F 		cmp	r0, #4096
 524 000e 01D3     		bcc	.L20
 126:Core/Src/main.c ****     if (raw_value < ADC_MIN) raw_value = ADC_MIN;
 525              		.loc 1 126 40 discriminator 1 view .LVU143
 526 0010 40F6FF75 		movw	r5, #4095
 527              	.L20:
 528              	.LVL29:
 127:Core/Src/main.c ****     
 529              		.loc 1 127 5 is_stmt 1 view .LVU144
 130:Core/Src/main.c ****         return center;
 530              		.loc 1 130 5 view .LVU145
 130:Core/Src/main.c ****         return center;
 531              		.loc 1 130 12 is_stmt 0 view .LVU146
 532 0014 29B2     		sxth	r1, r5
 533              	.LVL30:
 130:Core/Src/main.c ****         return center;
 534              		.loc 1 130 33 view .LVU147
 535 0016 23B2     		sxth	r3, r4
 536              	.LVL31:
 130:Core/Src/main.c ****         return center;
 537              		.loc 1 130 31 view .LVU148
 538 0018 C91A     		subs	r1, r1, r3
 130:Core/Src/main.c ****         return center;
 539              		.loc 1 130 50 view .LVU149
 540 001a 1E31     		adds	r1, r1, #30
 130:Core/Src/main.c ****         return center;
 541              		.loc 1 130 7 view .LVU150
 542 001c 3C29     		cmp	r1, #60
 543 001e 21D9     		bls	.L21
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 23


 135:Core/Src/main.c ****         // Ensure we don't divide by zero
 544              		.loc 1 135 5 is_stmt 1 view .LVU151
 135:Core/Src/main.c ****         // Ensure we don't divide by zero
 545              		.loc 1 135 7 is_stmt 0 view .LVU152
 546 0020 A542     		cmp	r5, r4
 547 0022 21D2     		bcs	.L22
 548              	.LBB9:
 137:Core/Src/main.c ****         float ratio = (float)(center - ADC_MIN) / (float)(center - min_val);
 549              		.loc 1 137 9 is_stmt 1 view .LVU153
 137:Core/Src/main.c ****         float ratio = (float)(center - ADC_MIN) / (float)(center - min_val);
 550              		.loc 1 137 12 is_stmt 0 view .LVU154
 551 0024 BC42     		cmp	r4, r7
 552 0026 1DD9     		bls	.L21
 138:Core/Src/main.c ****         int32_t result = center - (int32_t)((center - raw_value) * ratio);
 553              		.loc 1 138 9 is_stmt 1 view .LVU155
 138:Core/Src/main.c ****         int32_t result = center - (int32_t)((center - raw_value) * ratio);
 554              		.loc 1 138 23 is_stmt 0 view .LVU156
 555 0028 2046     		mov	r0, r4
 556 002a FFF7FEFF 		bl	__aeabi_i2f
 557              	.LVL32:
 138:Core/Src/main.c ****         int32_t result = center - (int32_t)((center - raw_value) * ratio);
 558              		.loc 1 138 23 view .LVU157
 559 002e 0646     		mov	r6, r0
 560              	.LVL33:
 138:Core/Src/main.c ****         int32_t result = center - (int32_t)((center - raw_value) * ratio);
 561              		.loc 1 138 51 view .LVU158
 562 0030 E01B     		subs	r0, r4, r7
 563 0032 FFF7FEFF 		bl	__aeabi_i2f
 564              	.LVL34:
 565 0036 0146     		mov	r1, r0
 138:Core/Src/main.c ****         int32_t result = center - (int32_t)((center - raw_value) * ratio);
 566              		.loc 1 138 15 view .LVU159
 567 0038 3046     		mov	r0, r6
 568 003a FFF7FEFF 		bl	__aeabi_fdiv
 569              	.LVL35:
 570 003e 0646     		mov	r6, r0
 571              	.LVL36:
 139:Core/Src/main.c ****         // Ensure result stays within bounds
 572              		.loc 1 139 9 is_stmt 1 view .LVU160
 139:Core/Src/main.c ****         // Ensure result stays within bounds
 573              		.loc 1 139 66 is_stmt 0 view .LVU161
 574 0040 601B     		subs	r0, r4, r5
 575              	.LVL37:
 139:Core/Src/main.c ****         // Ensure result stays within bounds
 576              		.loc 1 139 66 view .LVU162
 577 0042 FFF7FEFF 		bl	__aeabi_i2f
 578              	.LVL38:
 579 0046 3146     		mov	r1, r6
 580 0048 FFF7FEFF 		bl	__aeabi_fmul
 581              	.LVL39:
 139:Core/Src/main.c ****         // Ensure result stays within bounds
 582              		.loc 1 139 35 view .LVU163
 583 004c FFF7FEFF 		bl	__aeabi_f2iz
 584              	.LVL40:
 141:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 585              		.loc 1 141 9 is_stmt 1 view .LVU164
 141:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 24


 586              		.loc 1 141 12 is_stmt 0 view .LVU165
 587 0050 201A     		subs	r0, r4, r0
 588              	.LVL41:
 141:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 589              		.loc 1 141 12 view .LVU166
 590 0052 05D4     		bmi	.L26
 142:Core/Src/main.c ****         return (uint16_t)result;
 591              		.loc 1 142 9 is_stmt 1 view .LVU167
 142:Core/Src/main.c ****         return (uint16_t)result;
 592              		.loc 1 142 12 is_stmt 0 view .LVU168
 593 0054 B0F5805F 		cmp	r0, #4096
 594 0058 03DB     		blt	.L23
 142:Core/Src/main.c ****         return (uint16_t)result;
 595              		.loc 1 142 38 discriminator 1 view .LVU169
 596 005a 40F6FF70 		movw	r0, #4095
 597              	.LVL42:
 142:Core/Src/main.c ****         return (uint16_t)result;
 598              		.loc 1 142 38 discriminator 1 view .LVU170
 599 005e 00E0     		b	.L23
 600              	.LVL43:
 601              	.L26:
 141:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 602              		.loc 1 141 38 discriminator 1 view .LVU171
 603 0060 0020     		movs	r0, #0
 604              	.LVL44:
 605              	.L23:
 143:Core/Src/main.c ****     }
 606              		.loc 1 143 9 is_stmt 1 view .LVU172
 143:Core/Src/main.c ****     }
 607              		.loc 1 143 16 is_stmt 0 view .LVU173
 608 0062 84B2     		uxth	r4, r0
 609              	.LVL45:
 610              	.L21:
 143:Core/Src/main.c ****     }
 611              		.loc 1 143 16 view .LVU174
 612              	.LBE9:
 156:Core/Src/main.c **** 
 613              		.loc 1 156 1 view .LVU175
 614 0064 2046     		mov	r0, r4
 615 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 616              	.LVL46:
 617              	.L22:
 618              	.LBB10:
 148:Core/Src/main.c ****         float ratio = (float)(ADC_MAX - center) / (float)(max_val - center);
 619              		.loc 1 148 9 is_stmt 1 view .LVU176
 148:Core/Src/main.c ****         float ratio = (float)(ADC_MAX - center) / (float)(max_val - center);
 620              		.loc 1 148 12 is_stmt 0 view .LVU177
 621 0068 B442     		cmp	r4, r6
 622 006a FBD2     		bcs	.L21
 149:Core/Src/main.c ****         int32_t result = center + (int32_t)((raw_value - center) * ratio);
 623              		.loc 1 149 9 is_stmt 1 view .LVU178
 149:Core/Src/main.c ****         int32_t result = center + (int32_t)((raw_value - center) * ratio);
 624              		.loc 1 149 23 is_stmt 0 view .LVU179
 625 006c C4F57F60 		rsb	r0, r4, #4080
 626 0070 0F30     		adds	r0, r0, #15
 627 0072 FFF7FEFF 		bl	__aeabi_i2f
 628              	.LVL47:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 25


 149:Core/Src/main.c ****         int32_t result = center + (int32_t)((raw_value - center) * ratio);
 629              		.loc 1 149 23 view .LVU180
 630 0076 0746     		mov	r7, r0
 631              	.LVL48:
 149:Core/Src/main.c ****         int32_t result = center + (int32_t)((raw_value - center) * ratio);
 632              		.loc 1 149 51 view .LVU181
 633 0078 301B     		subs	r0, r6, r4
 634 007a FFF7FEFF 		bl	__aeabi_i2f
 635              	.LVL49:
 636 007e 0146     		mov	r1, r0
 149:Core/Src/main.c ****         int32_t result = center + (int32_t)((raw_value - center) * ratio);
 637              		.loc 1 149 15 view .LVU182
 638 0080 3846     		mov	r0, r7
 639 0082 FFF7FEFF 		bl	__aeabi_fdiv
 640              	.LVL50:
 641 0086 0646     		mov	r6, r0
 642              	.LVL51:
 150:Core/Src/main.c ****         // Ensure result stays within bounds
 643              		.loc 1 150 9 is_stmt 1 view .LVU183
 150:Core/Src/main.c ****         // Ensure result stays within bounds
 644              		.loc 1 150 66 is_stmt 0 view .LVU184
 645 0088 281B     		subs	r0, r5, r4
 646              	.LVL52:
 150:Core/Src/main.c ****         // Ensure result stays within bounds
 647              		.loc 1 150 66 view .LVU185
 648 008a FFF7FEFF 		bl	__aeabi_i2f
 649              	.LVL53:
 650 008e 3146     		mov	r1, r6
 651 0090 FFF7FEFF 		bl	__aeabi_fmul
 652              	.LVL54:
 150:Core/Src/main.c ****         // Ensure result stays within bounds
 653              		.loc 1 150 35 view .LVU186
 654 0094 FFF7FEFF 		bl	__aeabi_f2iz
 655              	.LVL55:
 152:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 656              		.loc 1 152 9 is_stmt 1 view .LVU187
 152:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 657              		.loc 1 152 12 is_stmt 0 view .LVU188
 658 0098 2018     		adds	r0, r4, r0
 659              	.LVL56:
 152:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 660              		.loc 1 152 12 view .LVU189
 661 009a 05D4     		bmi	.L28
 153:Core/Src/main.c ****         return (uint16_t)result;
 662              		.loc 1 153 9 is_stmt 1 view .LVU190
 153:Core/Src/main.c ****         return (uint16_t)result;
 663              		.loc 1 153 12 is_stmt 0 view .LVU191
 664 009c B0F5805F 		cmp	r0, #4096
 665 00a0 03DB     		blt	.L24
 153:Core/Src/main.c ****         return (uint16_t)result;
 666              		.loc 1 153 38 discriminator 1 view .LVU192
 667 00a2 40F6FF70 		movw	r0, #4095
 668              	.LVL57:
 153:Core/Src/main.c ****         return (uint16_t)result;
 669              		.loc 1 153 38 discriminator 1 view .LVU193
 670 00a6 00E0     		b	.L24
 671              	.LVL58:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 26


 672              	.L28:
 152:Core/Src/main.c ****         if (result > ADC_MAX) result = ADC_MAX;
 673              		.loc 1 152 38 discriminator 1 view .LVU194
 674 00a8 0020     		movs	r0, #0
 675              	.LVL59:
 676              	.L24:
 154:Core/Src/main.c ****     }
 677              		.loc 1 154 9 is_stmt 1 view .LVU195
 154:Core/Src/main.c ****     }
 678              		.loc 1 154 16 is_stmt 0 view .LVU196
 679 00aa 84B2     		uxth	r4, r0
 680 00ac DAE7     		b	.L21
 681              	.LBE10:
 682              		.cfi_endproc
 683              	.LFE70:
 685              		.section	.text.filter_adc_values,"ax",%progbits
 686              		.align	1
 687              		.global	filter_adc_values
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 692              	filter_adc_values:
 693              	.LFB71:
 159:Core/Src/main.c ****     for(int i = 0; i < 4; i++) {
 694              		.loc 1 159 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698 0000 70B5     		push	{r4, r5, r6, lr}
 699              	.LCFI9:
 700              		.cfi_def_cfa_offset 16
 701              		.cfi_offset 4, -16
 702              		.cfi_offset 5, -12
 703              		.cfi_offset 6, -8
 704              		.cfi_offset 14, -4
 160:Core/Src/main.c ****         // Calculate new filtered value with float precision
 705              		.loc 1 160 5 view .LVU198
 706              	.LBB11:
 160:Core/Src/main.c ****         // Calculate new filtered value with float precision
 707              		.loc 1 160 9 view .LVU199
 708              	.LVL60:
 160:Core/Src/main.c ****         // Calculate new filtered value with float precision
 709              		.loc 1 160 13 is_stmt 0 view .LVU200
 710 0002 0024     		movs	r4, #0
 160:Core/Src/main.c ****         // Calculate new filtered value with float precision
 711              		.loc 1 160 5 view .LVU201
 712 0004 07E0     		b	.L32
 713              	.LVL61:
 714              	.L35:
 715              	.LBB12:
 165:Core/Src/main.c ****         if (new_value < ADC_MIN) new_value = ADC_MIN;
 716              		.loc 1 165 44 discriminator 1 view .LVU202
 717 0006 1B4D     		ldr	r5, .L39
 718              	.LVL62:
 719              	.L33:
 169:Core/Src/main.c ****     }
 720              		.loc 1 169 9 is_stmt 1 view .LVU203
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 27


 169:Core/Src/main.c ****     }
 721              		.loc 1 169 27 is_stmt 0 view .LVU204
 722 0008 2846     		mov	r0, r5
 723 000a FFF7FEFF 		bl	__aeabi_f2uiz
 724              	.LVL63:
 169:Core/Src/main.c ****     }
 725              		.loc 1 169 25 view .LVU205
 726 000e 1A4B     		ldr	r3, .L39+4
 727 0010 23F81400 		strh	r0, [r3, r4, lsl #1]	@ movhi
 728              	.LBE12:
 160:Core/Src/main.c ****         // Calculate new filtered value with float precision
 729              		.loc 1 160 28 is_stmt 1 discriminator 2 view .LVU206
 730 0014 0134     		adds	r4, r4, #1
 731              	.LVL64:
 732              	.L32:
 160:Core/Src/main.c ****         // Calculate new filtered value with float precision
 733              		.loc 1 160 22 discriminator 1 view .LVU207
 734 0016 032C     		cmp	r4, #3
 735 0018 2BDC     		bgt	.L38
 736              	.LBB13:
 162:Core/Src/main.c ****         
 737              		.loc 1 162 9 view .LVU208
 162:Core/Src/main.c ****         
 738              		.loc 1 162 35 is_stmt 0 view .LVU209
 739 001a 184B     		ldr	r3, .L39+8
 740 001c 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 741 0020 FFF7FEFF 		bl	__aeabi_ui2f
 742              	.LVL65:
 162:Core/Src/main.c ****         
 743              		.loc 1 162 33 view .LVU210
 744 0024 164B     		ldr	r3, .L39+12
 745 0026 1E68     		ldr	r6, [r3]	@ float
 746 0028 3146     		mov	r1, r6
 747 002a FFF7FEFF 		bl	__aeabi_fmul
 748              	.LVL66:
 749 002e 0546     		mov	r5, r0
 162:Core/Src/main.c ****         
 750              		.loc 1 162 68 view .LVU211
 751 0030 3146     		mov	r1, r6
 752 0032 4FF07E50 		mov	r0, #1065353216
 753 0036 FFF7FEFF 		bl	__aeabi_fsub
 754              	.LVL67:
 755 003a 0646     		mov	r6, r0
 162:Core/Src/main.c ****         
 756              		.loc 1 162 79 view .LVU212
 757 003c 0E4B     		ldr	r3, .L39+4
 758 003e 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 759 0042 FFF7FEFF 		bl	__aeabi_ui2f
 760              	.LVL68:
 761 0046 0146     		mov	r1, r0
 162:Core/Src/main.c ****         
 762              		.loc 1 162 77 view .LVU213
 763 0048 3046     		mov	r0, r6
 764 004a FFF7FEFF 		bl	__aeabi_fmul
 765              	.LVL69:
 766 004e 0146     		mov	r1, r0
 162:Core/Src/main.c ****         
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 28


 767              		.loc 1 162 15 view .LVU214
 768 0050 2846     		mov	r0, r5
 769 0052 FFF7FEFF 		bl	__aeabi_fadd
 770              	.LVL70:
 771 0056 0546     		mov	r5, r0
 772              	.LVL71:
 165:Core/Src/main.c ****         if (new_value < ADC_MIN) new_value = ADC_MIN;
 773              		.loc 1 165 9 is_stmt 1 view .LVU215
 165:Core/Src/main.c ****         if (new_value < ADC_MIN) new_value = ADC_MIN;
 774              		.loc 1 165 12 is_stmt 0 view .LVU216
 775 0058 0649     		ldr	r1, .L39
 776 005a FFF7FEFF 		bl	__aeabi_fcmpgt
 777              	.LVL72:
 165:Core/Src/main.c ****         if (new_value < ADC_MIN) new_value = ADC_MIN;
 778              		.loc 1 165 12 view .LVU217
 779 005e 0028     		cmp	r0, #0
 780 0060 D1D1     		bne	.L35
 166:Core/Src/main.c ****         
 781              		.loc 1 166 9 is_stmt 1 view .LVU218
 166:Core/Src/main.c ****         
 782              		.loc 1 166 12 is_stmt 0 view .LVU219
 783 0062 0021     		movs	r1, #0
 784 0064 2846     		mov	r0, r5
 785 0066 FFF7FEFF 		bl	__aeabi_fcmplt
 786              	.LVL73:
 787 006a 0028     		cmp	r0, #0
 788 006c CCD0     		beq	.L33
 166:Core/Src/main.c ****         
 789              		.loc 1 166 44 discriminator 1 view .LVU220
 790 006e 0025     		movs	r5, #0
 791              	.LVL74:
 166:Core/Src/main.c ****         
 792              		.loc 1 166 44 discriminator 1 view .LVU221
 793 0070 CAE7     		b	.L33
 794              	.LVL75:
 795              	.L38:
 166:Core/Src/main.c ****         
 796              		.loc 1 166 44 discriminator 1 view .LVU222
 797              	.LBE13:
 798              	.LBE11:
 171:Core/Src/main.c **** 
 799              		.loc 1 171 1 view .LVU223
 800 0072 70BD     		pop	{r4, r5, r6, pc}
 801              	.LVL76:
 802              	.L40:
 171:Core/Src/main.c **** 
 803              		.loc 1 171 1 view .LVU224
 804              		.align	2
 805              	.L39:
 806 0074 00F07F45 		.word	1166012416
 807 0078 00000000 		.word	adc_filtered
 808 007c 00000000 		.word	adc_raw_buffer
 809 0080 00000000 		.word	alpha
 810              		.cfi_endproc
 811              	.LFE71:
 813              		.section	.text.buzzer_beep,"ax",%progbits
 814              		.align	1
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 29


 815              		.global	buzzer_beep
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 820              	buzzer_beep:
 821              	.LVL77:
 822              	.LFB72:
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 823              		.loc 1 207 1 is_stmt 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 827              		.loc 1 207 1 is_stmt 0 view .LVU226
 828 0000 38B5     		push	{r3, r4, r5, lr}
 829              	.LCFI10:
 830              		.cfi_def_cfa_offset 16
 831              		.cfi_offset 3, -16
 832              		.cfi_offset 4, -12
 833              		.cfi_offset 5, -8
 834              		.cfi_offset 14, -4
 835 0002 0446     		mov	r4, r0
 208:Core/Src/main.c ****   HAL_Delay(duration_ms);
 836              		.loc 1 208 3 is_stmt 1 view .LVU227
 837 0004 084D     		ldr	r5, .L43
 838 0006 0122     		movs	r2, #1
 839 0008 4FF48051 		mov	r1, #4096
 840 000c 2846     		mov	r0, r5
 841              	.LVL78:
 208:Core/Src/main.c ****   HAL_Delay(duration_ms);
 842              		.loc 1 208 3 is_stmt 0 view .LVU228
 843 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 844              	.LVL79:
 209:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 845              		.loc 1 209 3 is_stmt 1 view .LVU229
 846 0012 2046     		mov	r0, r4
 847 0014 FFF7FEFF 		bl	HAL_Delay
 848              	.LVL80:
 210:Core/Src/main.c **** }
 849              		.loc 1 210 3 view .LVU230
 850 0018 0022     		movs	r2, #0
 851 001a 4FF48051 		mov	r1, #4096
 852 001e 2846     		mov	r0, r5
 853 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 854              	.LVL81:
 211:Core/Src/main.c **** 
 855              		.loc 1 211 1 is_stmt 0 view .LVU231
 856 0024 38BD     		pop	{r3, r4, r5, pc}
 857              	.LVL82:
 858              	.L44:
 211:Core/Src/main.c **** 
 859              		.loc 1 211 1 view .LVU232
 860 0026 00BF     		.align	2
 861              	.L43:
 862 0028 00080140 		.word	1073809408
 863              		.cfi_endproc
 864              	.LFE72:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 30


 866              		.section	.text.double_beep,"ax",%progbits
 867              		.align	1
 868              		.global	double_beep
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 873              	double_beep:
 874              	.LFB73:
 214:Core/Src/main.c ****   buzzer_beep(100);
 875              		.loc 1 214 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879 0000 08B5     		push	{r3, lr}
 880              	.LCFI11:
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 3, -8
 883              		.cfi_offset 14, -4
 215:Core/Src/main.c ****   HAL_Delay(100);
 884              		.loc 1 215 3 view .LVU234
 885 0002 6420     		movs	r0, #100
 886 0004 FFF7FEFF 		bl	buzzer_beep
 887              	.LVL83:
 216:Core/Src/main.c ****   buzzer_beep(100);
 888              		.loc 1 216 3 view .LVU235
 889 0008 6420     		movs	r0, #100
 890 000a FFF7FEFF 		bl	HAL_Delay
 891              	.LVL84:
 217:Core/Src/main.c **** }
 892              		.loc 1 217 3 view .LVU236
 893 000e 6420     		movs	r0, #100
 894 0010 FFF7FEFF 		bl	buzzer_beep
 895              	.LVL85:
 218:Core/Src/main.c **** /* USER CODE END 0 */
 896              		.loc 1 218 1 is_stmt 0 view .LVU237
 897 0014 08BD     		pop	{r3, pc}
 898              		.cfi_endproc
 899              	.LFE73:
 901              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 902              		.align	1
 903              		.global	HAL_ADC_ConvCpltCallback
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 908              	HAL_ADC_ConvCpltCallback:
 909              	.LVL86:
 910              	.LFB82:
 671:Core/Src/main.c **** 
 672:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 673:Core/Src/main.c **** 
 674:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 675:Core/Src/main.c **** {
 911              		.loc 1 675 1 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 31


 676:Core/Src/main.c **** }
 916              		.loc 1 676 1 view .LVU239
 917 0000 7047     		bx	lr
 918              		.cfi_endproc
 919              	.LFE82:
 921              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 922              		.align	1
 923              		.global	HAL_GPIO_EXTI_Callback
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 928              	HAL_GPIO_EXTI_Callback:
 929              	.LVL87:
 930              	.LFB83:
 677:Core/Src/main.c **** 
 678:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 679:Core/Src/main.c **** {
 931              		.loc 1 679 1 view -0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		.loc 1 679 1 is_stmt 0 view .LVU241
 936 0000 38B5     		push	{r3, r4, r5, lr}
 937              	.LCFI12:
 938              		.cfi_def_cfa_offset 16
 939              		.cfi_offset 3, -16
 940              		.cfi_offset 4, -12
 941              		.cfi_offset 5, -8
 942              		.cfi_offset 14, -4
 943 0002 0446     		mov	r4, r0
 680:Core/Src/main.c ****     static uint32_t last_toggle_time_aux1 = 0;
 944              		.loc 1 680 5 is_stmt 1 view .LVU242
 681:Core/Src/main.c ****     static uint32_t last_toggle_time_aux2 = 0;
 945              		.loc 1 681 5 view .LVU243
 682:Core/Src/main.c ****     static uint32_t last_toggle_time_robotid = 0;
 946              		.loc 1 682 5 view .LVU244
 683:Core/Src/main.c ****     uint32_t current_time = HAL_GetTick();
 947              		.loc 1 683 5 view .LVU245
 948              		.loc 1 683 29 is_stmt 0 view .LVU246
 949 0004 FFF7FEFF 		bl	HAL_GetTick
 950              	.LVL88:
 951              		.loc 1 683 29 view .LVU247
 952 0008 0546     		mov	r5, r0
 953              	.LVL89:
 684:Core/Src/main.c ****     
 685:Core/Src/main.c ****     // Handle Robot ID buttons (PB0 and PB1)
 686:Core/Src/main.c ****     if(GPIO_Pin == GPIO_PIN_0 || GPIO_Pin == GPIO_PIN_1) {
 954              		.loc 1 686 5 is_stmt 1 view .LVU248
 955              		.loc 1 686 31 is_stmt 0 view .LVU249
 956 000a 631E     		subs	r3, r4, #1
 957 000c 9BB2     		uxth	r3, r3
 958              		.loc 1 686 7 view .LVU250
 959 000e 012B     		cmp	r3, #1
 960 0010 0CD9     		bls	.L56
 961              	.LVL90:
 962              	.L49:
 687:Core/Src/main.c ****         if(current_time - last_toggle_time_robotid >= 100) {
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 32


 688:Core/Src/main.c ****             // PB0 is decrement, PB1 is increment
 689:Core/Src/main.c ****             if(GPIO_Pin == GPIO_PIN_0) {
 690:Core/Src/main.c ****                 NRF24_Comm_UpdateRobotID(false);  // Decrement
 691:Core/Src/main.c ****             } else {
 692:Core/Src/main.c ****                 NRF24_Comm_UpdateRobotID(true);   // Increment
 693:Core/Src/main.c ****             }
 694:Core/Src/main.c ****             last_toggle_time_robotid = current_time;
 695:Core/Src/main.c ****             start_beep(10);  // Short beep for robot ID change
 696:Core/Src/main.c ****         }
 697:Core/Src/main.c ****     }
 698:Core/Src/main.c ****     
 699:Core/Src/main.c ****     // Only process AUX buttons if in joystick mode
 700:Core/Src/main.c ****     if (NRF24_Comm_CanLocalControlWrite()) {
 963              		.loc 1 700 5 is_stmt 1 view .LVU251
 964              		.loc 1 700 9 is_stmt 0 view .LVU252
 965 0012 FFF7FEFF 		bl	NRF24_Comm_CanLocalControlWrite
 966              	.LVL91:
 967              		.loc 1 700 8 discriminator 1 view .LVU253
 968 0016 28B1     		cbz	r0, .L52
 701:Core/Src/main.c ****         // Handle AUX1 (PA15)
 702:Core/Src/main.c ****         if(GPIO_Pin == GPIO_PIN_15) {
 969              		.loc 1 702 9 is_stmt 1 view .LVU254
 970              		.loc 1 702 11 is_stmt 0 view .LVU255
 971 0018 B4F5004F 		cmp	r4, #32768
 972 001c 1AD0     		beq	.L57
 973              	.L53:
 703:Core/Src/main.c ****             if(current_time - last_toggle_time_aux1 >= 100) {
 704:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 705:Core/Src/main.c ****                 if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_15) == GPIO_PIN_RESET) {
 706:Core/Src/main.c ****                     AUX1 ^= 0x01;
 707:Core/Src/main.c ****                     last_toggle_time_aux1 = current_time;
 708:Core/Src/main.c ****                     start_beep(5);  // Very short beep for AUX1
 709:Core/Src/main.c ****                 }
 710:Core/Src/main.c ****             }
 711:Core/Src/main.c ****         }
 712:Core/Src/main.c ****         
 713:Core/Src/main.c ****         // Handle AUX2 (PB11)
 714:Core/Src/main.c ****         if(GPIO_Pin == GPIO_PIN_11) {
 974              		.loc 1 714 9 is_stmt 1 view .LVU256
 975              		.loc 1 714 11 is_stmt 0 view .LVU257
 976 001e B4F5006F 		cmp	r4, #2048
 977 0022 2ED0     		beq	.L58
 978              	.L52:
 715:Core/Src/main.c ****             if(current_time - last_toggle_time_aux2 >= 100) {
 716:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 717:Core/Src/main.c ****                 if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11) == GPIO_PIN_RESET) {
 718:Core/Src/main.c ****                     AUX2 ^= 0x01;
 719:Core/Src/main.c ****                     last_toggle_time_aux2 = current_time;
 720:Core/Src/main.c ****                     start_beep(5);  // Very short beep for AUX2
 721:Core/Src/main.c ****                 }
 722:Core/Src/main.c ****             }
 723:Core/Src/main.c ****         }
 724:Core/Src/main.c ****     }
 725:Core/Src/main.c ****     
 726:Core/Src/main.c ****     // Handle NRF24 IRQ interrupt (PA8)
 727:Core/Src/main.c ****     if(GPIO_Pin == IRQ_Pin) {
 979              		.loc 1 727 5 is_stmt 1 view .LVU258
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 33


 980              		.loc 1 727 7 is_stmt 0 view .LVU259
 981 0024 B4F5807F 		cmp	r4, #256
 982 0028 42D0     		beq	.L59
 983              	.L48:
 728:Core/Src/main.c ****         NRF24_Comm_IRQ_Handler();
 729:Core/Src/main.c ****     }
 730:Core/Src/main.c **** }
 984              		.loc 1 730 1 view .LVU260
 985 002a 38BD     		pop	{r3, r4, r5, pc}
 986              	.LVL92:
 987              	.L56:
 687:Core/Src/main.c ****             // PB0 is decrement, PB1 is increment
 988              		.loc 1 687 9 is_stmt 1 view .LVU261
 687:Core/Src/main.c ****             // PB0 is decrement, PB1 is increment
 989              		.loc 1 687 25 is_stmt 0 view .LVU262
 990 002c 224B     		ldr	r3, .L61
 991 002e 1B68     		ldr	r3, [r3]
 992 0030 C31A     		subs	r3, r0, r3
 687:Core/Src/main.c ****             // PB0 is decrement, PB1 is increment
 993              		.loc 1 687 11 view .LVU263
 994 0032 632B     		cmp	r3, #99
 995 0034 EDD9     		bls	.L49
 689:Core/Src/main.c ****                 NRF24_Comm_UpdateRobotID(false);  // Decrement
 996              		.loc 1 689 13 is_stmt 1 view .LVU264
 689:Core/Src/main.c ****                 NRF24_Comm_UpdateRobotID(false);  // Decrement
 997              		.loc 1 689 15 is_stmt 0 view .LVU265
 998 0036 012C     		cmp	r4, #1
 999 0038 08D0     		beq	.L60
 692:Core/Src/main.c ****             }
 1000              		.loc 1 692 17 is_stmt 1 view .LVU266
 1001 003a 0120     		movs	r0, #1
 1002              	.LVL93:
 692:Core/Src/main.c ****             }
 1003              		.loc 1 692 17 is_stmt 0 view .LVU267
 1004 003c FFF7FEFF 		bl	NRF24_Comm_UpdateRobotID
 1005              	.LVL94:
 1006              	.L51:
 694:Core/Src/main.c ****             start_beep(10);  // Short beep for robot ID change
 1007              		.loc 1 694 13 is_stmt 1 view .LVU268
 694:Core/Src/main.c ****             start_beep(10);  // Short beep for robot ID change
 1008              		.loc 1 694 38 is_stmt 0 view .LVU269
 1009 0040 1D4B     		ldr	r3, .L61
 1010 0042 1D60     		str	r5, [r3]
 695:Core/Src/main.c ****         }
 1011              		.loc 1 695 13 is_stmt 1 view .LVU270
 1012 0044 0A20     		movs	r0, #10
 1013 0046 FFF7FEFF 		bl	start_beep
 1014              	.LVL95:
 1015 004a E2E7     		b	.L49
 1016              	.LVL96:
 1017              	.L60:
 690:Core/Src/main.c ****             } else {
 1018              		.loc 1 690 17 view .LVU271
 1019 004c 0020     		movs	r0, #0
 1020              	.LVL97:
 690:Core/Src/main.c ****             } else {
 1021              		.loc 1 690 17 is_stmt 0 view .LVU272
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 34


 1022 004e FFF7FEFF 		bl	NRF24_Comm_UpdateRobotID
 1023              	.LVL98:
 1024 0052 F5E7     		b	.L51
 1025              	.L57:
 703:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 1026              		.loc 1 703 13 is_stmt 1 view .LVU273
 703:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 1027              		.loc 1 703 29 is_stmt 0 view .LVU274
 1028 0054 194B     		ldr	r3, .L61+4
 1029 0056 1B68     		ldr	r3, [r3]
 1030 0058 EB1A     		subs	r3, r5, r3
 703:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 1031              		.loc 1 703 15 view .LVU275
 1032 005a 632B     		cmp	r3, #99
 1033 005c DFD9     		bls	.L53
 705:Core/Src/main.c ****                     AUX1 ^= 0x01;
 1034              		.loc 1 705 17 is_stmt 1 view .LVU276
 705:Core/Src/main.c ****                     AUX1 ^= 0x01;
 1035              		.loc 1 705 20 is_stmt 0 view .LVU277
 1036 005e 4FF40041 		mov	r1, #32768
 1037 0062 1748     		ldr	r0, .L61+8
 1038 0064 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1039              	.LVL99:
 705:Core/Src/main.c ****                     AUX1 ^= 0x01;
 1040              		.loc 1 705 19 discriminator 1 view .LVU278
 1041 0068 0028     		cmp	r0, #0
 1042 006a D8D1     		bne	.L53
 706:Core/Src/main.c ****                     last_toggle_time_aux1 = current_time;
 1043              		.loc 1 706 21 is_stmt 1 view .LVU279
 706:Core/Src/main.c ****                     last_toggle_time_aux1 = current_time;
 1044              		.loc 1 706 26 is_stmt 0 view .LVU280
 1045 006c 154A     		ldr	r2, .L61+12
 1046 006e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1047 0070 83F00103 		eor	r3, r3, #1
 1048 0074 1370     		strb	r3, [r2]
 707:Core/Src/main.c ****                     start_beep(5);  // Very short beep for AUX1
 1049              		.loc 1 707 21 is_stmt 1 view .LVU281
 707:Core/Src/main.c ****                     start_beep(5);  // Very short beep for AUX1
 1050              		.loc 1 707 43 is_stmt 0 view .LVU282
 1051 0076 114B     		ldr	r3, .L61+4
 1052 0078 1D60     		str	r5, [r3]
 708:Core/Src/main.c ****                 }
 1053              		.loc 1 708 21 is_stmt 1 view .LVU283
 1054 007a 0520     		movs	r0, #5
 1055 007c FFF7FEFF 		bl	start_beep
 1056              	.LVL100:
 1057 0080 CDE7     		b	.L53
 1058              	.L58:
 715:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 1059              		.loc 1 715 13 view .LVU284
 715:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 1060              		.loc 1 715 29 is_stmt 0 view .LVU285
 1061 0082 114B     		ldr	r3, .L61+16
 1062 0084 1B68     		ldr	r3, [r3]
 1063 0086 EB1A     		subs	r3, r5, r3
 715:Core/Src/main.c ****                 // Only toggle if button is actually pressed (LOW)
 1064              		.loc 1 715 15 view .LVU286
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 35


 1065 0088 632B     		cmp	r3, #99
 1066 008a CBD9     		bls	.L52
 717:Core/Src/main.c ****                     AUX2 ^= 0x01;
 1067              		.loc 1 717 17 is_stmt 1 view .LVU287
 717:Core/Src/main.c ****                     AUX2 ^= 0x01;
 1068              		.loc 1 717 20 is_stmt 0 view .LVU288
 1069 008c 4FF40061 		mov	r1, #2048
 1070 0090 0E48     		ldr	r0, .L61+20
 1071 0092 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1072              	.LVL101:
 717:Core/Src/main.c ****                     AUX2 ^= 0x01;
 1073              		.loc 1 717 19 discriminator 1 view .LVU289
 1074 0096 0028     		cmp	r0, #0
 1075 0098 C4D1     		bne	.L52
 718:Core/Src/main.c ****                     last_toggle_time_aux2 = current_time;
 1076              		.loc 1 718 21 is_stmt 1 view .LVU290
 718:Core/Src/main.c ****                     last_toggle_time_aux2 = current_time;
 1077              		.loc 1 718 26 is_stmt 0 view .LVU291
 1078 009a 0D4A     		ldr	r2, .L61+24
 1079 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1080 009e 83F00103 		eor	r3, r3, #1
 1081 00a2 1370     		strb	r3, [r2]
 719:Core/Src/main.c ****                     start_beep(5);  // Very short beep for AUX2
 1082              		.loc 1 719 21 is_stmt 1 view .LVU292
 719:Core/Src/main.c ****                     start_beep(5);  // Very short beep for AUX2
 1083              		.loc 1 719 43 is_stmt 0 view .LVU293
 1084 00a4 084B     		ldr	r3, .L61+16
 1085 00a6 1D60     		str	r5, [r3]
 720:Core/Src/main.c ****                 }
 1086              		.loc 1 720 21 is_stmt 1 view .LVU294
 1087 00a8 0520     		movs	r0, #5
 1088 00aa FFF7FEFF 		bl	start_beep
 1089              	.LVL102:
 1090 00ae B9E7     		b	.L52
 1091              	.L59:
 728:Core/Src/main.c ****     }
 1092              		.loc 1 728 9 view .LVU295
 1093 00b0 FFF7FEFF 		bl	NRF24_Comm_IRQ_Handler
 1094              	.LVL103:
 1095              		.loc 1 730 1 is_stmt 0 view .LVU296
 1096 00b4 B9E7     		b	.L48
 1097              	.L62:
 1098 00b6 00BF     		.align	2
 1099              	.L61:
 1100 00b8 00000000 		.word	last_toggle_time_robotid.2
 1101 00bc 00000000 		.word	last_toggle_time_aux1.1
 1102 00c0 00080140 		.word	1073809408
 1103 00c4 00000000 		.word	AUX1
 1104 00c8 00000000 		.word	last_toggle_time_aux2.0
 1105 00cc 000C0140 		.word	1073810432
 1106 00d0 00000000 		.word	AUX2
 1107              		.cfi_endproc
 1108              	.LFE83:
 1110              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1111              		.align	1
 1112              		.global	HAL_UART_RxCpltCallback
 1113              		.syntax unified
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 36


 1114              		.thumb
 1115              		.thumb_func
 1117              	HAL_UART_RxCpltCallback:
 1118              	.LVL104:
 1119              	.LFB84:
 731:Core/Src/main.c **** 
 732:Core/Src/main.c **** // Add UART reception callback
 733:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 734:Core/Src/main.c **** {
 1120              		.loc 1 734 1 is_stmt 1 view -0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 735:Core/Src/main.c ****     if (huart->Instance == USART1) {
 1124              		.loc 1 735 5 view .LVU298
 1125              		.loc 1 735 14 is_stmt 0 view .LVU299
 1126 0000 0268     		ldr	r2, [r0]
 1127              		.loc 1 735 8 view .LVU300
 1128 0002 074B     		ldr	r3, .L70
 1129 0004 9A42     		cmp	r2, r3
 1130 0006 00D0     		beq	.L69
 1131 0008 7047     		bx	lr
 1132              	.L69:
 734:Core/Src/main.c ****     if (huart->Instance == USART1) {
 1133              		.loc 1 734 1 view .LVU301
 1134 000a 10B5     		push	{r4, lr}
 1135              	.LCFI13:
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 4, -8
 1138              		.cfi_offset 14, -4
 736:Core/Src/main.c ****         // Process received UART data
 737:Core/Src/main.c ****         NRF24_Comm_UpdateFromUART(uart_buffer);
 1139              		.loc 1 737 9 is_stmt 1 view .LVU302
 1140 000c 054C     		ldr	r4, .L70+4
 1141 000e 2046     		mov	r0, r4
 1142              	.LVL105:
 1143              		.loc 1 737 9 is_stmt 0 view .LVU303
 1144 0010 FFF7FEFF 		bl	NRF24_Comm_UpdateFromUART
 1145              	.LVL106:
 738:Core/Src/main.c ****         
 739:Core/Src/main.c ****         // Restart UART reception
 740:Core/Src/main.c ****         HAL_UART_Receive_IT(&huart1, uart_buffer, UART_BUFFER_SIZE);
 1146              		.loc 1 740 9 is_stmt 1 view .LVU304
 1147 0014 0C22     		movs	r2, #12
 1148 0016 2146     		mov	r1, r4
 1149 0018 0348     		ldr	r0, .L70+8
 1150 001a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1151              	.LVL107:
 741:Core/Src/main.c ****     }
 742:Core/Src/main.c **** }
 1152              		.loc 1 742 1 is_stmt 0 view .LVU305
 1153 001e 10BD     		pop	{r4, pc}
 1154              	.L71:
 1155              		.align	2
 1156              	.L70:
 1157 0020 00380140 		.word	1073821696
 1158 0024 00000000 		.word	uart_buffer
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 37


 1159 0028 00000000 		.word	huart1
 1160              		.cfi_endproc
 1161              	.LFE84:
 1163              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1164              		.align	1
 1165              		.global	HAL_UART_ErrorCallback
 1166              		.syntax unified
 1167              		.thumb
 1168              		.thumb_func
 1170              	HAL_UART_ErrorCallback:
 1171              	.LVL108:
 1172              	.LFB85:
 743:Core/Src/main.c **** 
 744:Core/Src/main.c **** void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 745:Core/Src/main.c **** {
 1173              		.loc 1 745 1 is_stmt 1 view -0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		.loc 1 745 1 is_stmt 0 view .LVU307
 1178 0000 08B5     		push	{r3, lr}
 1179              	.LCFI14:
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 3, -8
 1182              		.cfi_offset 14, -4
 746:Core/Src/main.c ****     if (huart->Instance == USART1) {
 1183              		.loc 1 746 5 is_stmt 1 view .LVU308
 1184              		.loc 1 746 14 is_stmt 0 view .LVU309
 1185 0002 0268     		ldr	r2, [r0]
 1186              		.loc 1 746 8 view .LVU310
 1187 0004 064B     		ldr	r3, .L76
 1188 0006 9A42     		cmp	r2, r3
 1189 0008 00D0     		beq	.L75
 1190              	.LVL109:
 1191              	.L72:
 747:Core/Src/main.c ****         // On UART error, return control to joystick
 748:Core/Src/main.c ****         nrf24_status.control_mode = CONTROL_MODE_JOYSTICK;
 749:Core/Src/main.c ****         
 750:Core/Src/main.c ****         // Restart UART reception
 751:Core/Src/main.c ****         HAL_UART_Receive_IT(&huart1, uart_buffer, UART_BUFFER_SIZE);
 752:Core/Src/main.c ****     }
 753:Core/Src/main.c **** }
 1192              		.loc 1 753 1 view .LVU311
 1193 000a 08BD     		pop	{r3, pc}
 1194              	.LVL110:
 1195              	.L75:
 748:Core/Src/main.c ****         
 1196              		.loc 1 748 9 is_stmt 1 view .LVU312
 748:Core/Src/main.c ****         
 1197              		.loc 1 748 35 is_stmt 0 view .LVU313
 1198 000c 054B     		ldr	r3, .L76+4
 1199 000e 0022     		movs	r2, #0
 1200 0010 1A74     		strb	r2, [r3, #16]
 751:Core/Src/main.c ****     }
 1201              		.loc 1 751 9 is_stmt 1 view .LVU314
 1202 0012 0C22     		movs	r2, #12
 1203 0014 0449     		ldr	r1, .L76+8
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 38


 1204 0016 0548     		ldr	r0, .L76+12
 1205              	.LVL111:
 751:Core/Src/main.c ****     }
 1206              		.loc 1 751 9 is_stmt 0 view .LVU315
 1207 0018 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1208              	.LVL112:
 1209              		.loc 1 753 1 view .LVU316
 1210 001c F5E7     		b	.L72
 1211              	.L77:
 1212 001e 00BF     		.align	2
 1213              	.L76:
 1214 0020 00380140 		.word	1073821696
 1215 0024 00000000 		.word	nrf24_status
 1216 0028 00000000 		.word	uart_buffer
 1217 002c 00000000 		.word	huart1
 1218              		.cfi_endproc
 1219              	.LFE85:
 1221              		.section	.text.Error_Handler,"ax",%progbits
 1222              		.align	1
 1223              		.global	Error_Handler
 1224              		.syntax unified
 1225              		.thumb
 1226              		.thumb_func
 1228              	Error_Handler:
 1229              	.LFB86:
 754:Core/Src/main.c **** 
 755:Core/Src/main.c **** /* USER CODE END 4 */
 756:Core/Src/main.c **** 
 757:Core/Src/main.c **** /**
 758:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 759:Core/Src/main.c ****   * @retval None
 760:Core/Src/main.c ****   */
 761:Core/Src/main.c **** void Error_Handler(void)
 762:Core/Src/main.c **** {
 1230              		.loc 1 762 1 is_stmt 1 view -0
 1231              		.cfi_startproc
 1232              		@ Volatile: function does not return.
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 763:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 764:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 765:Core/Src/main.c ****   __disable_irq();
 1236              		.loc 1 765 3 view .LVU318
 1237              	.LBB14:
 1238              	.LBI14:
 1239              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 39


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 40


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 41


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1240              		.loc 2 140 27 view .LVU319
 1241              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1242              		.loc 2 142 3 view .LVU320
 1243              		.syntax unified
 1244              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1245 0000 72B6     		cpsid i
 1246              	@ 0 "" 2
 1247              		.thumb
 1248              		.syntax unified
 1249              	.L79:
 1250              	.LBE15:
 1251              	.LBE14:
 766:Core/Src/main.c ****   while (1)
 1252              		.loc 1 766 3 view .LVU321
 767:Core/Src/main.c ****   {
 768:Core/Src/main.c ****   }
 1253              		.loc 1 768 3 view .LVU322
 766:Core/Src/main.c ****   while (1)
 1254              		.loc 1 766 9 view .LVU323
 1255 0002 FEE7     		b	.L79
 1256              		.cfi_endproc
 1257              	.LFE86:
 1259              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1260              		.align	1
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1265              	MX_ADC1_Init:
 1266              	.LFB76:
 387:Core/Src/main.c **** 
 1267              		.loc 1 387 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 16
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 00B5     		push	{lr}
 1272              	.LCFI15:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 14, -4
 1275 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 42


 1276              	.LCFI16:
 1277              		.cfi_def_cfa_offset 24
 393:Core/Src/main.c **** 
 1278              		.loc 1 393 3 view .LVU325
 393:Core/Src/main.c **** 
 1279              		.loc 1 393 26 is_stmt 0 view .LVU326
 1280 0004 0023     		movs	r3, #0
 1281 0006 0193     		str	r3, [sp, #4]
 1282 0008 0293     		str	r3, [sp, #8]
 1283 000a 0393     		str	r3, [sp, #12]
 401:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1284              		.loc 1 401 3 is_stmt 1 view .LVU327
 401:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1285              		.loc 1 401 18 is_stmt 0 view .LVU328
 1286 000c 2248     		ldr	r0, .L92
 1287 000e 234A     		ldr	r2, .L92+4
 1288 0010 0260     		str	r2, [r0]
 402:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 1289              		.loc 1 402 3 is_stmt 1 view .LVU329
 402:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 1290              		.loc 1 402 27 is_stmt 0 view .LVU330
 1291 0012 4FF48072 		mov	r2, #256
 1292 0016 8260     		str	r2, [r0, #8]
 403:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1293              		.loc 1 403 3 is_stmt 1 view .LVU331
 403:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1294              		.loc 1 403 33 is_stmt 0 view .LVU332
 1295 0018 0122     		movs	r2, #1
 1296 001a 0273     		strb	r2, [r0, #12]
 404:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1297              		.loc 1 404 3 is_stmt 1 view .LVU333
 404:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1298              		.loc 1 404 36 is_stmt 0 view .LVU334
 1299 001c 0375     		strb	r3, [r0, #20]
 405:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1300              		.loc 1 405 3 is_stmt 1 view .LVU335
 405:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1301              		.loc 1 405 31 is_stmt 0 view .LVU336
 1302 001e 4FF46022 		mov	r2, #917504
 1303 0022 C261     		str	r2, [r0, #28]
 406:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 1304              		.loc 1 406 3 is_stmt 1 view .LVU337
 406:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 1305              		.loc 1 406 24 is_stmt 0 view .LVU338
 1306 0024 4360     		str	r3, [r0, #4]
 407:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1307              		.loc 1 407 3 is_stmt 1 view .LVU339
 407:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1308              		.loc 1 407 30 is_stmt 0 view .LVU340
 1309 0026 0423     		movs	r3, #4
 1310 0028 0361     		str	r3, [r0, #16]
 408:Core/Src/main.c ****   {
 1311              		.loc 1 408 3 is_stmt 1 view .LVU341
 408:Core/Src/main.c ****   {
 1312              		.loc 1 408 7 is_stmt 0 view .LVU342
 1313 002a FFF7FEFF 		bl	HAL_ADC_Init
 1314              	.LVL113:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 43


 408:Core/Src/main.c ****   {
 1315              		.loc 1 408 6 discriminator 1 view .LVU343
 1316 002e 48BB     		cbnz	r0, .L87
 415:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1317              		.loc 1 415 3 is_stmt 1 view .LVU344
 415:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1318              		.loc 1 415 19 is_stmt 0 view .LVU345
 1319 0030 0023     		movs	r3, #0
 1320 0032 0193     		str	r3, [sp, #4]
 416:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 1321              		.loc 1 416 3 is_stmt 1 view .LVU346
 416:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 1322              		.loc 1 416 16 is_stmt 0 view .LVU347
 1323 0034 0123     		movs	r3, #1
 1324 0036 0293     		str	r3, [sp, #8]
 417:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1325              		.loc 1 417 3 is_stmt 1 view .LVU348
 417:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1326              		.loc 1 417 24 is_stmt 0 view .LVU349
 1327 0038 0723     		movs	r3, #7
 1328 003a 0393     		str	r3, [sp, #12]
 418:Core/Src/main.c ****   {
 1329              		.loc 1 418 3 is_stmt 1 view .LVU350
 418:Core/Src/main.c ****   {
 1330              		.loc 1 418 7 is_stmt 0 view .LVU351
 1331 003c 01A9     		add	r1, sp, #4
 1332 003e 1648     		ldr	r0, .L92
 1333 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1334              	.LVL114:
 418:Core/Src/main.c ****   {
 1335              		.loc 1 418 6 discriminator 1 view .LVU352
 1336 0044 00BB     		cbnz	r0, .L88
 425:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1337              		.loc 1 425 3 is_stmt 1 view .LVU353
 425:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1338              		.loc 1 425 19 is_stmt 0 view .LVU354
 1339 0046 0123     		movs	r3, #1
 1340 0048 0193     		str	r3, [sp, #4]
 426:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1341              		.loc 1 426 3 is_stmt 1 view .LVU355
 426:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1342              		.loc 1 426 16 is_stmt 0 view .LVU356
 1343 004a 0223     		movs	r3, #2
 1344 004c 0293     		str	r3, [sp, #8]
 427:Core/Src/main.c ****   {
 1345              		.loc 1 427 3 is_stmt 1 view .LVU357
 427:Core/Src/main.c ****   {
 1346              		.loc 1 427 7 is_stmt 0 view .LVU358
 1347 004e 01A9     		add	r1, sp, #4
 1348 0050 1148     		ldr	r0, .L92
 1349 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1350              	.LVL115:
 427:Core/Src/main.c ****   {
 1351              		.loc 1 427 6 discriminator 1 view .LVU359
 1352 0056 C8B9     		cbnz	r0, .L89
 434:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1353              		.loc 1 434 3 is_stmt 1 view .LVU360
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 44


 434:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1354              		.loc 1 434 19 is_stmt 0 view .LVU361
 1355 0058 0223     		movs	r3, #2
 1356 005a 0193     		str	r3, [sp, #4]
 435:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1357              		.loc 1 435 3 is_stmt 1 view .LVU362
 435:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1358              		.loc 1 435 16 is_stmt 0 view .LVU363
 1359 005c 0323     		movs	r3, #3
 1360 005e 0293     		str	r3, [sp, #8]
 436:Core/Src/main.c ****   {
 1361              		.loc 1 436 3 is_stmt 1 view .LVU364
 436:Core/Src/main.c ****   {
 1362              		.loc 1 436 7 is_stmt 0 view .LVU365
 1363 0060 01A9     		add	r1, sp, #4
 1364 0062 0D48     		ldr	r0, .L92
 1365 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1366              	.LVL116:
 436:Core/Src/main.c ****   {
 1367              		.loc 1 436 6 discriminator 1 view .LVU366
 1368 0068 90B9     		cbnz	r0, .L90
 443:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 1369              		.loc 1 443 3 is_stmt 1 view .LVU367
 443:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 1370              		.loc 1 443 19 is_stmt 0 view .LVU368
 1371 006a 0323     		movs	r3, #3
 1372 006c 0193     		str	r3, [sp, #4]
 444:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1373              		.loc 1 444 3 is_stmt 1 view .LVU369
 444:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1374              		.loc 1 444 16 is_stmt 0 view .LVU370
 1375 006e 0423     		movs	r3, #4
 1376 0070 0293     		str	r3, [sp, #8]
 445:Core/Src/main.c ****   {
 1377              		.loc 1 445 3 is_stmt 1 view .LVU371
 445:Core/Src/main.c ****   {
 1378              		.loc 1 445 7 is_stmt 0 view .LVU372
 1379 0072 0DEB0301 		add	r1, sp, r3
 1380 0076 0848     		ldr	r0, .L92
 1381 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1382              	.LVL117:
 445:Core/Src/main.c ****   {
 1383              		.loc 1 445 6 discriminator 1 view .LVU373
 1384 007c 50B9     		cbnz	r0, .L91
 453:Core/Src/main.c **** 
 1385              		.loc 1 453 1 view .LVU374
 1386 007e 05B0     		add	sp, sp, #20
 1387              	.LCFI17:
 1388              		.cfi_remember_state
 1389              		.cfi_def_cfa_offset 4
 1390              		@ sp needed
 1391 0080 5DF804FB 		ldr	pc, [sp], #4
 1392              	.L87:
 1393              	.LCFI18:
 1394              		.cfi_restore_state
 410:Core/Src/main.c ****   }
 1395              		.loc 1 410 5 is_stmt 1 view .LVU375
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 45


 1396 0084 FFF7FEFF 		bl	Error_Handler
 1397              	.LVL118:
 1398              	.L88:
 420:Core/Src/main.c ****   }
 1399              		.loc 1 420 5 view .LVU376
 1400 0088 FFF7FEFF 		bl	Error_Handler
 1401              	.LVL119:
 1402              	.L89:
 429:Core/Src/main.c ****   }
 1403              		.loc 1 429 5 view .LVU377
 1404 008c FFF7FEFF 		bl	Error_Handler
 1405              	.LVL120:
 1406              	.L90:
 438:Core/Src/main.c ****   }
 1407              		.loc 1 438 5 view .LVU378
 1408 0090 FFF7FEFF 		bl	Error_Handler
 1409              	.LVL121:
 1410              	.L91:
 447:Core/Src/main.c ****   }
 1411              		.loc 1 447 5 view .LVU379
 1412 0094 FFF7FEFF 		bl	Error_Handler
 1413              	.LVL122:
 1414              	.L93:
 1415              		.align	2
 1416              	.L92:
 1417 0098 00000000 		.word	hadc1
 1418 009c 00240140 		.word	1073816576
 1419              		.cfi_endproc
 1420              	.LFE76:
 1422              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1423              		.align	1
 1424              		.syntax unified
 1425              		.thumb
 1426              		.thumb_func
 1428              	MX_USART1_UART_Init:
 1429              	.LFB79:
 533:Core/Src/main.c **** 
 1430              		.loc 1 533 1 view -0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434 0000 08B5     		push	{r3, lr}
 1435              	.LCFI19:
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 3, -8
 1438              		.cfi_offset 14, -4
 542:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1439              		.loc 1 542 3 view .LVU381
 542:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1440              		.loc 1 542 19 is_stmt 0 view .LVU382
 1441 0002 0D48     		ldr	r0, .L98
 1442 0004 0D4B     		ldr	r3, .L98+4
 1443 0006 0360     		str	r3, [r0]
 543:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 1444              		.loc 1 543 3 is_stmt 1 view .LVU383
 543:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 1445              		.loc 1 543 24 is_stmt 0 view .LVU384
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 46


 1446 0008 4FF4E133 		mov	r3, #115200
 1447 000c 4360     		str	r3, [r0, #4]
 544:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_2;
 1448              		.loc 1 544 3 is_stmt 1 view .LVU385
 544:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_2;
 1449              		.loc 1 544 26 is_stmt 0 view .LVU386
 1450 000e 4FF48053 		mov	r3, #4096
 1451 0012 8360     		str	r3, [r0, #8]
 545:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 1452              		.loc 1 545 3 is_stmt 1 view .LVU387
 545:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 1453              		.loc 1 545 24 is_stmt 0 view .LVU388
 1454 0014 4FF40053 		mov	r3, #8192
 1455 0018 C360     		str	r3, [r0, #12]
 546:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1456              		.loc 1 546 3 is_stmt 1 view .LVU389
 546:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1457              		.loc 1 546 22 is_stmt 0 view .LVU390
 1458 001a 4FF48063 		mov	r3, #1024
 1459 001e 0361     		str	r3, [r0, #16]
 547:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1460              		.loc 1 547 3 is_stmt 1 view .LVU391
 547:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1461              		.loc 1 547 20 is_stmt 0 view .LVU392
 1462 0020 0C23     		movs	r3, #12
 1463 0022 4361     		str	r3, [r0, #20]
 548:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1464              		.loc 1 548 3 is_stmt 1 view .LVU393
 548:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1465              		.loc 1 548 25 is_stmt 0 view .LVU394
 1466 0024 0023     		movs	r3, #0
 1467 0026 8361     		str	r3, [r0, #24]
 549:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1468              		.loc 1 549 3 is_stmt 1 view .LVU395
 549:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1469              		.loc 1 549 28 is_stmt 0 view .LVU396
 1470 0028 C361     		str	r3, [r0, #28]
 550:Core/Src/main.c ****   {
 1471              		.loc 1 550 3 is_stmt 1 view .LVU397
 550:Core/Src/main.c ****   {
 1472              		.loc 1 550 7 is_stmt 0 view .LVU398
 1473 002a FFF7FEFF 		bl	HAL_UART_Init
 1474              	.LVL123:
 550:Core/Src/main.c ****   {
 1475              		.loc 1 550 6 discriminator 1 view .LVU399
 1476 002e 00B9     		cbnz	r0, .L97
 558:Core/Src/main.c **** 
 1477              		.loc 1 558 1 view .LVU400
 1478 0030 08BD     		pop	{r3, pc}
 1479              	.L97:
 552:Core/Src/main.c ****   }
 1480              		.loc 1 552 5 is_stmt 1 view .LVU401
 1481 0032 FFF7FEFF 		bl	Error_Handler
 1482              	.LVL124:
 1483              	.L99:
 1484 0036 00BF     		.align	2
 1485              	.L98:
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 47


 1486 0038 00000000 		.word	huart1
 1487 003c 00380140 		.word	1073821696
 1488              		.cfi_endproc
 1489              	.LFE79:
 1491              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1492              		.align	1
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1497              	MX_I2C1_Init:
 1498              	.LFB77:
 461:Core/Src/main.c **** 
 1499              		.loc 1 461 1 view -0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503 0000 08B5     		push	{r3, lr}
 1504              	.LCFI20:
 1505              		.cfi_def_cfa_offset 8
 1506              		.cfi_offset 3, -8
 1507              		.cfi_offset 14, -4
 470:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 200000;
 1508              		.loc 1 470 3 view .LVU403
 470:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 200000;
 1509              		.loc 1 470 18 is_stmt 0 view .LVU404
 1510 0002 0A48     		ldr	r0, .L104
 1511 0004 0A4B     		ldr	r3, .L104+4
 1512 0006 0360     		str	r3, [r0]
 471:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1513              		.loc 1 471 3 is_stmt 1 view .LVU405
 471:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1514              		.loc 1 471 25 is_stmt 0 view .LVU406
 1515 0008 0A4B     		ldr	r3, .L104+8
 1516 000a 4360     		str	r3, [r0, #4]
 472:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1517              		.loc 1 472 3 is_stmt 1 view .LVU407
 472:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1518              		.loc 1 472 24 is_stmt 0 view .LVU408
 1519 000c 0023     		movs	r3, #0
 1520 000e 8360     		str	r3, [r0, #8]
 473:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1521              		.loc 1 473 3 is_stmt 1 view .LVU409
 473:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1522              		.loc 1 473 26 is_stmt 0 view .LVU410
 1523 0010 C360     		str	r3, [r0, #12]
 474:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1524              		.loc 1 474 3 is_stmt 1 view .LVU411
 474:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1525              		.loc 1 474 29 is_stmt 0 view .LVU412
 1526 0012 4FF48042 		mov	r2, #16384
 1527 0016 0261     		str	r2, [r0, #16]
 475:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1528              		.loc 1 475 3 is_stmt 1 view .LVU413
 475:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1529              		.loc 1 475 30 is_stmt 0 view .LVU414
 1530 0018 4361     		str	r3, [r0, #20]
 476:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 48


 1531              		.loc 1 476 3 is_stmt 1 view .LVU415
 476:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1532              		.loc 1 476 26 is_stmt 0 view .LVU416
 1533 001a 8361     		str	r3, [r0, #24]
 477:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1534              		.loc 1 477 3 is_stmt 1 view .LVU417
 477:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1535              		.loc 1 477 30 is_stmt 0 view .LVU418
 1536 001c C361     		str	r3, [r0, #28]
 478:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1537              		.loc 1 478 3 is_stmt 1 view .LVU419
 478:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1538              		.loc 1 478 28 is_stmt 0 view .LVU420
 1539 001e 0362     		str	r3, [r0, #32]
 479:Core/Src/main.c ****   {
 1540              		.loc 1 479 3 is_stmt 1 view .LVU421
 479:Core/Src/main.c ****   {
 1541              		.loc 1 479 7 is_stmt 0 view .LVU422
 1542 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1543              	.LVL125:
 479:Core/Src/main.c ****   {
 1544              		.loc 1 479 6 discriminator 1 view .LVU423
 1545 0024 00B9     		cbnz	r0, .L103
 487:Core/Src/main.c **** 
 1546              		.loc 1 487 1 view .LVU424
 1547 0026 08BD     		pop	{r3, pc}
 1548              	.L103:
 481:Core/Src/main.c ****   }
 1549              		.loc 1 481 5 is_stmt 1 view .LVU425
 1550 0028 FFF7FEFF 		bl	Error_Handler
 1551              	.LVL126:
 1552              	.L105:
 1553              		.align	2
 1554              	.L104:
 1555 002c 00000000 		.word	hi2c1
 1556 0030 00540040 		.word	1073763328
 1557 0034 400D0300 		.word	200000
 1558              		.cfi_endproc
 1559              	.LFE77:
 1561              		.section	.text.MX_SPI2_Init,"ax",%progbits
 1562              		.align	1
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1567              	MX_SPI2_Init:
 1568              	.LFB78:
 495:Core/Src/main.c **** 
 1569              		.loc 1 495 1 view -0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573 0000 08B5     		push	{r3, lr}
 1574              	.LCFI21:
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 3, -8
 1577              		.cfi_offset 14, -4
 505:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 49


 1578              		.loc 1 505 3 view .LVU427
 505:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1579              		.loc 1 505 18 is_stmt 0 view .LVU428
 1580 0002 0D48     		ldr	r0, .L110
 1581 0004 0D4B     		ldr	r3, .L110+4
 1582 0006 0360     		str	r3, [r0]
 506:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1583              		.loc 1 506 3 is_stmt 1 view .LVU429
 506:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1584              		.loc 1 506 19 is_stmt 0 view .LVU430
 1585 0008 4FF48273 		mov	r3, #260
 1586 000c 4360     		str	r3, [r0, #4]
 507:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1587              		.loc 1 507 3 is_stmt 1 view .LVU431
 507:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1588              		.loc 1 507 24 is_stmt 0 view .LVU432
 1589 000e 0023     		movs	r3, #0
 1590 0010 8360     		str	r3, [r0, #8]
 508:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1591              		.loc 1 508 3 is_stmt 1 view .LVU433
 508:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1592              		.loc 1 508 23 is_stmt 0 view .LVU434
 1593 0012 C360     		str	r3, [r0, #12]
 509:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1594              		.loc 1 509 3 is_stmt 1 view .LVU435
 509:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1595              		.loc 1 509 26 is_stmt 0 view .LVU436
 1596 0014 0361     		str	r3, [r0, #16]
 510:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1597              		.loc 1 510 3 is_stmt 1 view .LVU437
 510:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1598              		.loc 1 510 23 is_stmt 0 view .LVU438
 1599 0016 4361     		str	r3, [r0, #20]
 511:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1600              		.loc 1 511 3 is_stmt 1 view .LVU439
 511:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1601              		.loc 1 511 18 is_stmt 0 view .LVU440
 1602 0018 4FF40072 		mov	r2, #512
 1603 001c 8261     		str	r2, [r0, #24]
 512:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1604              		.loc 1 512 3 is_stmt 1 view .LVU441
 512:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1605              		.loc 1 512 32 is_stmt 0 view .LVU442
 1606 001e C361     		str	r3, [r0, #28]
 513:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1607              		.loc 1 513 3 is_stmt 1 view .LVU443
 513:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1608              		.loc 1 513 23 is_stmt 0 view .LVU444
 1609 0020 0362     		str	r3, [r0, #32]
 514:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1610              		.loc 1 514 3 is_stmt 1 view .LVU445
 514:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1611              		.loc 1 514 21 is_stmt 0 view .LVU446
 1612 0022 4362     		str	r3, [r0, #36]
 515:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1613              		.loc 1 515 3 is_stmt 1 view .LVU447
 515:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 50


 1614              		.loc 1 515 29 is_stmt 0 view .LVU448
 1615 0024 8362     		str	r3, [r0, #40]
 516:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1616              		.loc 1 516 3 is_stmt 1 view .LVU449
 516:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1617              		.loc 1 516 28 is_stmt 0 view .LVU450
 1618 0026 0A23     		movs	r3, #10
 1619 0028 C362     		str	r3, [r0, #44]
 517:Core/Src/main.c ****   {
 1620              		.loc 1 517 3 is_stmt 1 view .LVU451
 517:Core/Src/main.c ****   {
 1621              		.loc 1 517 7 is_stmt 0 view .LVU452
 1622 002a FFF7FEFF 		bl	HAL_SPI_Init
 1623              	.LVL127:
 517:Core/Src/main.c ****   {
 1624              		.loc 1 517 6 discriminator 1 view .LVU453
 1625 002e 00B9     		cbnz	r0, .L109
 525:Core/Src/main.c **** 
 1626              		.loc 1 525 1 view .LVU454
 1627 0030 08BD     		pop	{r3, pc}
 1628              	.L109:
 519:Core/Src/main.c ****   }
 1629              		.loc 1 519 5 is_stmt 1 view .LVU455
 1630 0032 FFF7FEFF 		bl	Error_Handler
 1631              	.LVL128:
 1632              	.L111:
 1633 0036 00BF     		.align	2
 1634              	.L110:
 1635 0038 00000000 		.word	hspi2
 1636 003c 00380040 		.word	1073756160
 1637              		.cfi_endproc
 1638              	.LFE78:
 1640              		.section	.text.SystemClock_Config,"ax",%progbits
 1641              		.align	1
 1642              		.global	SystemClock_Config
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	SystemClock_Config:
 1648              	.LFB75:
 341:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1649              		.loc 1 341 1 view -0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 80
 1652              		@ frame_needed = 0, uses_anonymous_args = 0
 1653 0000 10B5     		push	{r4, lr}
 1654              	.LCFI22:
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 4, -8
 1657              		.cfi_offset 14, -4
 1658 0002 94B0     		sub	sp, sp, #80
 1659              	.LCFI23:
 1660              		.cfi_def_cfa_offset 88
 342:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1661              		.loc 1 342 3 view .LVU457
 342:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1662              		.loc 1 342 22 is_stmt 0 view .LVU458
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 51


 1663 0004 0AAC     		add	r4, sp, #40
 1664 0006 2822     		movs	r2, #40
 1665 0008 0021     		movs	r1, #0
 1666 000a 2046     		mov	r0, r4
 1667 000c FFF7FEFF 		bl	memset
 1668              	.LVL129:
 343:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1669              		.loc 1 343 3 is_stmt 1 view .LVU459
 343:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1670              		.loc 1 343 22 is_stmt 0 view .LVU460
 1671 0010 0023     		movs	r3, #0
 1672 0012 0593     		str	r3, [sp, #20]
 1673 0014 0693     		str	r3, [sp, #24]
 1674 0016 0793     		str	r3, [sp, #28]
 1675 0018 0893     		str	r3, [sp, #32]
 1676 001a 0993     		str	r3, [sp, #36]
 344:Core/Src/main.c **** 
 1677              		.loc 1 344 3 is_stmt 1 view .LVU461
 344:Core/Src/main.c **** 
 1678              		.loc 1 344 28 is_stmt 0 view .LVU462
 1679 001c 0193     		str	r3, [sp, #4]
 1680 001e 0293     		str	r3, [sp, #8]
 1681 0020 0393     		str	r3, [sp, #12]
 1682 0022 0493     		str	r3, [sp, #16]
 349:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1683              		.loc 1 349 3 is_stmt 1 view .LVU463
 349:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1684              		.loc 1 349 36 is_stmt 0 view .LVU464
 1685 0024 0223     		movs	r3, #2
 1686 0026 0A93     		str	r3, [sp, #40]
 350:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1687              		.loc 1 350 3 is_stmt 1 view .LVU465
 350:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1688              		.loc 1 350 30 is_stmt 0 view .LVU466
 1689 0028 0122     		movs	r2, #1
 1690 002a 0E92     		str	r2, [sp, #56]
 351:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1691              		.loc 1 351 3 is_stmt 1 view .LVU467
 351:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1692              		.loc 1 351 41 is_stmt 0 view .LVU468
 1693 002c 1022     		movs	r2, #16
 1694 002e 0F92     		str	r2, [sp, #60]
 352:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1695              		.loc 1 352 3 is_stmt 1 view .LVU469
 352:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1696              		.loc 1 352 34 is_stmt 0 view .LVU470
 1697 0030 1193     		str	r3, [sp, #68]
 353:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 1698              		.loc 1 353 3 is_stmt 1 view .LVU471
 354:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1699              		.loc 1 354 3 view .LVU472
 354:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1700              		.loc 1 354 32 is_stmt 0 view .LVU473
 1701 0032 4FF4C013 		mov	r3, #1572864
 1702 0036 1393     		str	r3, [sp, #76]
 355:Core/Src/main.c ****   {
 1703              		.loc 1 355 3 is_stmt 1 view .LVU474
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 52


 355:Core/Src/main.c ****   {
 1704              		.loc 1 355 7 is_stmt 0 view .LVU475
 1705 0038 2046     		mov	r0, r4
 1706 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1707              	.LVL130:
 355:Core/Src/main.c ****   {
 1708              		.loc 1 355 6 discriminator 1 view .LVU476
 1709 003e C8B9     		cbnz	r0, .L117
 362:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1710              		.loc 1 362 3 is_stmt 1 view .LVU477
 362:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1711              		.loc 1 362 31 is_stmt 0 view .LVU478
 1712 0040 0F23     		movs	r3, #15
 1713 0042 0593     		str	r3, [sp, #20]
 364:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1714              		.loc 1 364 3 is_stmt 1 view .LVU479
 364:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1715              		.loc 1 364 34 is_stmt 0 view .LVU480
 1716 0044 0223     		movs	r3, #2
 1717 0046 0693     		str	r3, [sp, #24]
 365:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1718              		.loc 1 365 3 is_stmt 1 view .LVU481
 365:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1719              		.loc 1 365 35 is_stmt 0 view .LVU482
 1720 0048 0023     		movs	r3, #0
 1721 004a 0793     		str	r3, [sp, #28]
 366:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1722              		.loc 1 366 3 is_stmt 1 view .LVU483
 366:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1723              		.loc 1 366 36 is_stmt 0 view .LVU484
 1724 004c 4FF48062 		mov	r2, #1024
 1725 0050 0892     		str	r2, [sp, #32]
 367:Core/Src/main.c **** 
 1726              		.loc 1 367 3 is_stmt 1 view .LVU485
 367:Core/Src/main.c **** 
 1727              		.loc 1 367 36 is_stmt 0 view .LVU486
 1728 0052 0993     		str	r3, [sp, #36]
 369:Core/Src/main.c ****   {
 1729              		.loc 1 369 3 is_stmt 1 view .LVU487
 369:Core/Src/main.c ****   {
 1730              		.loc 1 369 7 is_stmt 0 view .LVU488
 1731 0054 0121     		movs	r1, #1
 1732 0056 05A8     		add	r0, sp, #20
 1733 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1734              	.LVL131:
 369:Core/Src/main.c ****   {
 1735              		.loc 1 369 6 discriminator 1 view .LVU489
 1736 005c 60B9     		cbnz	r0, .L118
 373:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 1737              		.loc 1 373 3 is_stmt 1 view .LVU490
 373:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 1738              		.loc 1 373 38 is_stmt 0 view .LVU491
 1739 005e 0223     		movs	r3, #2
 1740 0060 0193     		str	r3, [sp, #4]
 374:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1741              		.loc 1 374 3 is_stmt 1 view .LVU492
 374:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 53


 1742              		.loc 1 374 35 is_stmt 0 view .LVU493
 1743 0062 4FF48043 		mov	r3, #16384
 1744 0066 0393     		str	r3, [sp, #12]
 375:Core/Src/main.c ****   {
 1745              		.loc 1 375 3 is_stmt 1 view .LVU494
 375:Core/Src/main.c ****   {
 1746              		.loc 1 375 7 is_stmt 0 view .LVU495
 1747 0068 01A8     		add	r0, sp, #4
 1748 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1749              	.LVL132:
 375:Core/Src/main.c ****   {
 1750              		.loc 1 375 6 discriminator 1 view .LVU496
 1751 006e 28B9     		cbnz	r0, .L119
 379:Core/Src/main.c **** 
 1752              		.loc 1 379 1 view .LVU497
 1753 0070 14B0     		add	sp, sp, #80
 1754              	.LCFI24:
 1755              		.cfi_remember_state
 1756              		.cfi_def_cfa_offset 8
 1757              		@ sp needed
 1758 0072 10BD     		pop	{r4, pc}
 1759              	.L117:
 1760              	.LCFI25:
 1761              		.cfi_restore_state
 357:Core/Src/main.c ****   }
 1762              		.loc 1 357 5 is_stmt 1 view .LVU498
 1763 0074 FFF7FEFF 		bl	Error_Handler
 1764              	.LVL133:
 1765              	.L118:
 371:Core/Src/main.c ****   }
 1766              		.loc 1 371 5 view .LVU499
 1767 0078 FFF7FEFF 		bl	Error_Handler
 1768              	.LVL134:
 1769              	.L119:
 377:Core/Src/main.c ****   }
 1770              		.loc 1 377 5 view .LVU500
 1771 007c FFF7FEFF 		bl	Error_Handler
 1772              	.LVL135:
 1773              		.cfi_endproc
 1774              	.LFE75:
 1776              		.section	.text.main,"ax",%progbits
 1777              		.align	1
 1778              		.global	main
 1779              		.syntax unified
 1780              		.thumb
 1781              		.thumb_func
 1783              	main:
 1784              	.LFB74:
 226:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1785              		.loc 1 226 1 view -0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 0
 1788              		@ frame_needed = 0, uses_anonymous_args = 0
 1789 0000 10B5     		push	{r4, lr}
 1790              	.LCFI26:
 1791              		.cfi_def_cfa_offset 8
 1792              		.cfi_offset 4, -8
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 54


 1793              		.cfi_offset 14, -4
 231:Core/Src/main.c ****     SystemClock_Config();
 1794              		.loc 1 231 5 view .LVU502
 1795 0002 FFF7FEFF 		bl	HAL_Init
 1796              	.LVL136:
 232:Core/Src/main.c ****     
 1797              		.loc 1 232 5 view .LVU503
 1798 0006 FFF7FEFF 		bl	SystemClock_Config
 1799              	.LVL137:
 234:Core/Src/main.c ****     MX_DMA_Init();
 1800              		.loc 1 234 5 view .LVU504
 1801 000a FFF7FEFF 		bl	MX_GPIO_Init
 1802              	.LVL138:
 235:Core/Src/main.c ****     MX_ADC1_Init();
 1803              		.loc 1 235 5 view .LVU505
 1804 000e FFF7FEFF 		bl	MX_DMA_Init
 1805              	.LVL139:
 236:Core/Src/main.c ****     MX_USART1_UART_Init();
 1806              		.loc 1 236 5 view .LVU506
 1807 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1808              	.LVL140:
 237:Core/Src/main.c ****     MX_I2C1_Init();
 1809              		.loc 1 237 5 view .LVU507
 1810 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1811              	.LVL141:
 238:Core/Src/main.c ****     MX_SPI2_Init();
 1812              		.loc 1 238 5 view .LVU508
 1813 001a FFF7FEFF 		bl	MX_I2C1_Init
 1814              	.LVL142:
 239:Core/Src/main.c ****     
 1815              		.loc 1 239 5 view .LVU509
 1816 001e FFF7FEFF 		bl	MX_SPI2_Init
 1817              	.LVL143:
 243:Core/Src/main.c ****     HAL_Delay(100);
 1818              		.loc 1 243 5 view .LVU510
 1819 0022 394C     		ldr	r4, .L128
 1820 0024 0122     		movs	r2, #1
 1821 0026 4FF48051 		mov	r1, #4096
 1822 002a 2046     		mov	r0, r4
 1823 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1824              	.LVL144:
 244:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, GPIO_PIN_RESET);
 1825              		.loc 1 244 5 view .LVU511
 1826 0030 6420     		movs	r0, #100
 1827 0032 FFF7FEFF 		bl	HAL_Delay
 1828              	.LVL145:
 245:Core/Src/main.c **** 
 1829              		.loc 1 245 5 view .LVU512
 1830 0036 0022     		movs	r2, #0
 1831 0038 4FF48051 		mov	r1, #4096
 1832 003c 2046     		mov	r0, r4
 1833 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1834              	.LVL146:
 248:Core/Src/main.c ****     HAL_Delay(100);  // Wait for ADC to stabilize
 1835              		.loc 1 248 5 view .LVU513
 1836 0042 0422     		movs	r2, #4
 1837 0044 3149     		ldr	r1, .L128+4
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 55


 1838 0046 3248     		ldr	r0, .L128+8
 1839 0048 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1840              	.LVL147:
 249:Core/Src/main.c **** 
 1841              		.loc 1 249 5 view .LVU514
 1842 004c 6420     		movs	r0, #100
 1843 004e FFF7FEFF 		bl	HAL_Delay
 1844              	.LVL148:
 252:Core/Src/main.c ****     (void)nrf24_init_success;
 1845              		.loc 1 252 5 view .LVU515
 252:Core/Src/main.c ****     (void)nrf24_init_success;
 1846              		.loc 1 252 31 is_stmt 0 view .LVU516
 1847 0052 FFF7FEFF 		bl	NRF24_Comm_Init
 1848              	.LVL149:
 253:Core/Src/main.c ****     HAL_Delay(500);
 1849              		.loc 1 253 5 is_stmt 1 view .LVU517
 254:Core/Src/main.c **** 
 1850              		.loc 1 254 5 view .LVU518
 1851 0056 4FF4FA70 		mov	r0, #500
 1852 005a FFF7FEFF 		bl	HAL_Delay
 1853              	.LVL150:
 257:Core/Src/main.c ****     }
 1854              		.loc 1 257 5 view .LVU519
 1855              	.L121:
 258:Core/Src/main.c ****     
 1856              		.loc 1 258 5 view .LVU520
 257:Core/Src/main.c ****     }
 1857              		.loc 1 257 49 discriminator 1 view .LVU521
 257:Core/Src/main.c ****     }
 1858              		.loc 1 257 12 is_stmt 0 discriminator 1 view .LVU522
 1859 005e 4FF48041 		mov	r1, #16384
 1860 0062 2C48     		ldr	r0, .L128+12
 1861 0064 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1862              	.LVL151:
 257:Core/Src/main.c ****     }
 1863              		.loc 1 257 49 discriminator 1 view .LVU523
 1864 0068 0028     		cmp	r0, #0
 1865 006a F8D1     		bne	.L121
 261:Core/Src/main.c ****     
 1866              		.loc 1 261 5 is_stmt 1 view .LVU524
 1867 006c 0022     		movs	r2, #0
 1868 006e 4FF48051 		mov	r1, #4096
 1869 0072 00F18040 		add	r0, r0, #1073741824
 1870 0076 00F58430 		add	r0, r0, #67584
 1871 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1872              	.LVL152:
 264:Core/Src/main.c ****     adc_center[1] = 0;    // CH2
 1873              		.loc 1 264 5 view .LVU525
 264:Core/Src/main.c ****     adc_center[1] = 0;    // CH2
 1874              		.loc 1 264 19 is_stmt 0 view .LVU526
 1875 007e 264A     		ldr	r2, .L128+16
 1876 0080 4FF40061 		mov	r1, #2048
 1877 0084 1180     		strh	r1, [r2]	@ movhi
 265:Core/Src/main.c ****     adc_center[2] = 2048; // CH3
 1878              		.loc 1 265 5 is_stmt 1 view .LVU527
 265:Core/Src/main.c ****     adc_center[2] = 2048; // CH3
 1879              		.loc 1 265 19 is_stmt 0 view .LVU528
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 56


 1880 0086 0023     		movs	r3, #0
 1881 0088 5380     		strh	r3, [r2, #2]	@ movhi
 266:Core/Src/main.c ****     adc_center[3] = 2048; // CH4
 1882              		.loc 1 266 5 is_stmt 1 view .LVU529
 266:Core/Src/main.c ****     adc_center[3] = 2048; // CH4
 1883              		.loc 1 266 19 is_stmt 0 view .LVU530
 1884 008a 9180     		strh	r1, [r2, #4]	@ movhi
 267:Core/Src/main.c ****     
 1885              		.loc 1 267 5 is_stmt 1 view .LVU531
 267:Core/Src/main.c ****     
 1886              		.loc 1 267 19 is_stmt 0 view .LVU532
 1887 008c D180     		strh	r1, [r2, #6]	@ movhi
 270:Core/Src/main.c ****     adc_max[0] = 4098;  // CH1 max
 1888              		.loc 1 270 5 is_stmt 1 view .LVU533
 270:Core/Src/main.c ****     adc_max[0] = 4098;  // CH1 max
 1889              		.loc 1 270 16 is_stmt 0 view .LVU534
 1890 008e 2349     		ldr	r1, .L128+20
 1891 0090 4422     		movs	r2, #68
 1892 0092 0A80     		strh	r2, [r1]	@ movhi
 271:Core/Src/main.c ****     adc_min[1] = 0;     // CH2 min
 1893              		.loc 1 271 5 is_stmt 1 view .LVU535
 271:Core/Src/main.c ****     adc_min[1] = 0;     // CH2 min
 1894              		.loc 1 271 16 is_stmt 0 view .LVU536
 1895 0094 224A     		ldr	r2, .L128+24
 1896 0096 41F20200 		movw	r0, #4098
 1897 009a 1080     		strh	r0, [r2]	@ movhi
 272:Core/Src/main.c ****     adc_max[1] = 4027;  // CH2 max
 1898              		.loc 1 272 5 is_stmt 1 view .LVU537
 272:Core/Src/main.c ****     adc_max[1] = 4027;  // CH2 max
 1899              		.loc 1 272 16 is_stmt 0 view .LVU538
 1900 009c 4B80     		strh	r3, [r1, #2]	@ movhi
 273:Core/Src/main.c ****     adc_min[2] = 88;    // CH3 min
 1901              		.loc 1 273 5 is_stmt 1 view .LVU539
 273:Core/Src/main.c ****     adc_min[2] = 88;    // CH3 min
 1902              		.loc 1 273 16 is_stmt 0 view .LVU540
 1903 009e 40F6BB70 		movw	r0, #4027
 1904 00a2 5080     		strh	r0, [r2, #2]	@ movhi
 274:Core/Src/main.c ****     adc_max[2] = 4119;  // CH3 max
 1905              		.loc 1 274 5 is_stmt 1 view .LVU541
 274:Core/Src/main.c ****     adc_max[2] = 4119;  // CH3 max
 1906              		.loc 1 274 16 is_stmt 0 view .LVU542
 1907 00a4 5820     		movs	r0, #88
 1908 00a6 8880     		strh	r0, [r1, #4]	@ movhi
 275:Core/Src/main.c ****     adc_min[3] = 114;   // CH4 min
 1909              		.loc 1 275 5 is_stmt 1 view .LVU543
 275:Core/Src/main.c ****     adc_min[3] = 114;   // CH4 min
 1910              		.loc 1 275 16 is_stmt 0 view .LVU544
 1911 00a8 41F21700 		movw	r0, #4119
 1912 00ac 9080     		strh	r0, [r2, #4]	@ movhi
 276:Core/Src/main.c ****     adc_max[3] = 4147;  // CH4 max
 1913              		.loc 1 276 5 is_stmt 1 view .LVU545
 276:Core/Src/main.c ****     adc_max[3] = 4147;  // CH4 max
 1914              		.loc 1 276 16 is_stmt 0 view .LVU546
 1915 00ae 7220     		movs	r0, #114
 1916 00b0 C880     		strh	r0, [r1, #6]	@ movhi
 277:Core/Src/main.c ****     
 1917              		.loc 1 277 5 is_stmt 1 view .LVU547
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 57


 277:Core/Src/main.c ****     
 1918              		.loc 1 277 16 is_stmt 0 view .LVU548
 1919 00b2 41F23301 		movw	r1, #4147
 1920 00b6 D180     		strh	r1, [r2, #6]	@ movhi
 280:Core/Src/main.c ****         adc_calib_error[i] = (int16_t)adc_raw_buffer[i] - (int16_t)adc_center[i];
 1921              		.loc 1 280 5 is_stmt 1 view .LVU549
 1922              	.LBB16:
 280:Core/Src/main.c ****         adc_calib_error[i] = (int16_t)adc_raw_buffer[i] - (int16_t)adc_center[i];
 1923              		.loc 1 280 9 view .LVU550
 1924              	.LVL153:
 280:Core/Src/main.c ****         adc_calib_error[i] = (int16_t)adc_raw_buffer[i] - (int16_t)adc_center[i];
 1925              		.loc 1 280 5 is_stmt 0 view .LVU551
 1926 00b8 0AE0     		b	.L122
 1927              	.LVL154:
 1928              	.L123:
 281:Core/Src/main.c ****     }
 1929              		.loc 1 281 9 is_stmt 1 view .LVU552
 281:Core/Src/main.c ****     }
 1930              		.loc 1 281 53 is_stmt 0 view .LVU553
 1931 00ba 144A     		ldr	r2, .L128+4
 1932 00bc 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 281:Core/Src/main.c ****     }
 1933              		.loc 1 281 78 view .LVU554
 1934 00c0 1549     		ldr	r1, .L128+16
 1935 00c2 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 281:Core/Src/main.c ****     }
 1936              		.loc 1 281 57 view .LVU555
 1937 00c6 521A     		subs	r2, r2, r1
 281:Core/Src/main.c ****     }
 1938              		.loc 1 281 28 view .LVU556
 1939 00c8 1649     		ldr	r1, .L128+28
 1940 00ca 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 280:Core/Src/main.c ****         adc_calib_error[i] = (int16_t)adc_raw_buffer[i] - (int16_t)adc_center[i];
 1941              		.loc 1 280 28 is_stmt 1 discriminator 3 view .LVU557
 1942 00ce 0133     		adds	r3, r3, #1
 1943              	.LVL155:
 1944              	.L122:
 280:Core/Src/main.c ****         adc_calib_error[i] = (int16_t)adc_raw_buffer[i] - (int16_t)adc_center[i];
 1945              		.loc 1 280 22 discriminator 1 view .LVU558
 1946 00d0 032B     		cmp	r3, #3
 1947 00d2 F2DD     		ble	.L123
 1948              	.LBE16:
 1949              	.LBB17:
 285:Core/Src/main.c ****         adc_filtered[i] = adc_raw_buffer[i];
 1950              		.loc 1 285 13 is_stmt 0 view .LVU559
 1951 00d4 0023     		movs	r3, #0
 1952              	.LVL156:
 285:Core/Src/main.c ****         adc_filtered[i] = adc_raw_buffer[i];
 1953              		.loc 1 285 13 view .LVU560
 1954 00d6 06E0     		b	.L124
 1955              	.LVL157:
 1956              	.L125:
 286:Core/Src/main.c ****     }
 1957              		.loc 1 286 9 is_stmt 1 view .LVU561
 286:Core/Src/main.c ****     }
 1958              		.loc 1 286 41 is_stmt 0 view .LVU562
 1959 00d8 0C4A     		ldr	r2, .L128+4
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 58


 1960 00da 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 286:Core/Src/main.c ****     }
 1961              		.loc 1 286 25 view .LVU563
 1962 00de 124A     		ldr	r2, .L128+32
 1963 00e0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 285:Core/Src/main.c ****         adc_filtered[i] = adc_raw_buffer[i];
 1964              		.loc 1 285 28 is_stmt 1 discriminator 3 view .LVU564
 1965 00e4 0133     		adds	r3, r3, #1
 1966              	.LVL158:
 1967              	.L124:
 285:Core/Src/main.c ****         adc_filtered[i] = adc_raw_buffer[i];
 1968              		.loc 1 285 22 discriminator 1 view .LVU565
 1969 00e6 032B     		cmp	r3, #3
 1970 00e8 F6DD     		ble	.L125
 1971              	.LBE17:
 290:Core/Src/main.c **** 
 1972              		.loc 1 290 5 view .LVU566
 1973 00ea FFF7FEFF 		bl	double_beep
 1974              	.LVL159:
 293:Core/Src/main.c ****     
 1975              		.loc 1 293 5 view .LVU567
 1976 00ee 0C22     		movs	r2, #12
 1977 00f0 0E49     		ldr	r1, .L128+36
 1978 00f2 0F48     		ldr	r0, .L128+40
 1979 00f4 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1980              	.LVL160:
 1981              	.L126:
 295:Core/Src/main.c ****     {
 1982              		.loc 1 295 5 view .LVU568
 298:Core/Src/main.c ****         
 1983              		.loc 1 298 9 view .LVU569
 1984 00f8 FFF7FEFF 		bl	update_beep
 1985              	.LVL161:
 331:Core/Src/main.c ****         NRF24_Comm_StatusFeedback();
 1986              		.loc 1 331 9 view .LVU570
 1987 00fc FFF7FEFF 		bl	NRF24_Comm_Transmit
 1988              	.LVL162:
 332:Core/Src/main.c ****     }
 1989              		.loc 1 332 9 discriminator 1 view .LVU571
 1990 0100 FFF7FEFF 		bl	NRF24_Comm_StatusFeedback
 1991              	.LVL163:
 295:Core/Src/main.c ****     {
 1992              		.loc 1 295 11 view .LVU572
 1993 0104 F8E7     		b	.L126
 1994              	.L129:
 1995 0106 00BF     		.align	2
 1996              	.L128:
 1997 0108 00080140 		.word	1073809408
 1998 010c 00000000 		.word	adc_raw_buffer
 1999 0110 00000000 		.word	hadc1
 2000 0114 00100140 		.word	1073811456
 2001 0118 00000000 		.word	adc_center
 2002 011c 00000000 		.word	adc_min
 2003 0120 00000000 		.word	adc_max
 2004 0124 00000000 		.word	adc_calib_error
 2005 0128 00000000 		.word	adc_filtered
 2006 012c 00000000 		.word	uart_buffer
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 59


 2007 0130 00000000 		.word	huart1
 2008              		.cfi_endproc
 2009              	.LFE74:
 2011              		.section	.bss.last_toggle_time_aux2.0,"aw",%nobits
 2012              		.align	2
 2015              	last_toggle_time_aux2.0:
 2016 0000 00000000 		.space	4
 2017              		.section	.bss.last_toggle_time_aux1.1,"aw",%nobits
 2018              		.align	2
 2021              	last_toggle_time_aux1.1:
 2022 0000 00000000 		.space	4
 2023              		.section	.bss.last_toggle_time_robotid.2,"aw",%nobits
 2024              		.align	2
 2027              	last_toggle_time_robotid.2:
 2028 0000 00000000 		.space	4
 2029              		.global	beep_control
 2030              		.section	.bss.beep_control,"aw",%nobits
 2031              		.align	2
 2034              	beep_control:
 2035 0000 00000000 		.space	12
 2035      00000000 
 2035      00000000 
 2036              		.global	adc_filtered
 2037              		.section	.bss.adc_filtered,"aw",%nobits
 2038              		.align	2
 2041              	adc_filtered:
 2042 0000 00000000 		.space	8
 2042      00000000 
 2043              		.global	alpha
 2044              		.section	.data.alpha,"aw"
 2045              		.align	2
 2048              	alpha:
 2049 0000 CDCCCC3D 		.word	1036831949
 2050              		.global	adc_max
 2051              		.section	.bss.adc_max,"aw",%nobits
 2052              		.align	2
 2055              	adc_max:
 2056 0000 00000000 		.space	8
 2056      00000000 
 2057              		.global	adc_min
 2058              		.section	.bss.adc_min,"aw",%nobits
 2059              		.align	2
 2062              	adc_min:
 2063 0000 00000000 		.space	8
 2063      00000000 
 2064              		.global	adc_calib_error
 2065              		.section	.bss.adc_calib_error,"aw",%nobits
 2066              		.align	2
 2069              	adc_calib_error:
 2070 0000 00000000 		.space	8
 2070      00000000 
 2071              		.global	adc_center
 2072              		.section	.bss.adc_center,"aw",%nobits
 2073              		.align	2
 2076              	adc_center:
 2077 0000 00000000 		.space	8
 2077      00000000 
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 60


 2078              		.global	uart_buffer
 2079              		.section	.bss.uart_buffer,"aw",%nobits
 2080              		.align	2
 2083              	uart_buffer:
 2084 0000 00000000 		.space	12
 2084      00000000 
 2084      00000000 
 2085              		.global	AUX3
 2086              		.section	.bss.AUX3,"aw",%nobits
 2089              	AUX3:
 2090 0000 00       		.space	1
 2091              		.global	AUX2
 2092              		.section	.bss.AUX2,"aw",%nobits
 2095              	AUX2:
 2096 0000 00       		.space	1
 2097              		.global	AUX1
 2098              		.section	.bss.AUX1,"aw",%nobits
 2101              	AUX1:
 2102 0000 00       		.space	1
 2103              		.global	adc_raw_buffer
 2104              		.section	.bss.adc_raw_buffer,"aw",%nobits
 2105              		.align	2
 2108              	adc_raw_buffer:
 2109 0000 00000000 		.space	8
 2109      00000000 
 2110              		.global	huart1
 2111              		.section	.bss.huart1,"aw",%nobits
 2112              		.align	2
 2115              	huart1:
 2116 0000 00000000 		.space	120
 2116      00000000 
 2116      00000000 
 2116      00000000 
 2116      00000000 
 2117              		.global	hspi2
 2118              		.section	.bss.hspi2,"aw",%nobits
 2119              		.align	2
 2122              	hspi2:
 2123 0000 00000000 		.space	128
 2123      00000000 
 2123      00000000 
 2123      00000000 
 2123      00000000 
 2124              		.global	hi2c1
 2125              		.section	.bss.hi2c1,"aw",%nobits
 2126              		.align	2
 2129              	hi2c1:
 2130 0000 00000000 		.space	84
 2130      00000000 
 2130      00000000 
 2130      00000000 
 2130      00000000 
 2131              		.global	hdma_adc1
 2132              		.section	.bss.hdma_adc1,"aw",%nobits
 2133              		.align	2
 2136              	hdma_adc1:
 2137 0000 00000000 		.space	68
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 61


 2137      00000000 
 2137      00000000 
 2137      00000000 
 2137      00000000 
 2138              		.global	hadc1
 2139              		.section	.bss.hadc1,"aw",%nobits
 2140              		.align	2
 2143              	hadc1:
 2144 0000 00000000 		.space	76
 2144      00000000 
 2144      00000000 
 2144      00000000 
 2144      00000000 
 2145              		.text
 2146              	.Letext0:
 2147              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2148              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 2149              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 2150              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2151              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2152              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2153              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2154              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2155              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2156              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2157              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 2158              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2159              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2160              		.file 16 "Core/Inc/main.h"
 2161              		.file 17 "Bsp/Inc/nrf24_comm.h"
 2162              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2163              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 2164              		.file 20 "<built-in>"
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:310    .text.MX_GPIO_Init:0000016c $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:320    .text.MX_DMA_Init:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:325    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:373    .text.MX_DMA_Init:00000030 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:378    .text.update_beep:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:383    .text.update_beep:00000000 update_beep
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:437    .text.update_beep:0000002c $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2034   .bss.beep_control:00000000 beep_control
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:443    .text.start_beep:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:448    .text.start_beep:00000000 start_beep
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:488    .text.start_beep:00000020 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:494    .text.remap_adc_value:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:500    .text.remap_adc_value:00000000 remap_adc_value
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:686    .text.filter_adc_values:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:692    .text.filter_adc_values:00000000 filter_adc_values
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:806    .text.filter_adc_values:00000074 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2041   .bss.adc_filtered:00000000 adc_filtered
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2108   .bss.adc_raw_buffer:00000000 adc_raw_buffer
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2048   .data.alpha:00000000 alpha
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:814    .text.buzzer_beep:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:820    .text.buzzer_beep:00000000 buzzer_beep
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:862    .text.buzzer_beep:00000028 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:867    .text.double_beep:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:873    .text.double_beep:00000000 double_beep
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:902    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:908    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:922    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:928    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1100   .text.HAL_GPIO_EXTI_Callback:000000b8 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2027   .bss.last_toggle_time_robotid.2:00000000 last_toggle_time_robotid.2
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2021   .bss.last_toggle_time_aux1.1:00000000 last_toggle_time_aux1.1
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2101   .bss.AUX1:00000000 AUX1
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2015   .bss.last_toggle_time_aux2.0:00000000 last_toggle_time_aux2.0
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2095   .bss.AUX2:00000000 AUX2
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1111   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1117   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1157   .text.HAL_UART_RxCpltCallback:00000020 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2083   .bss.uart_buffer:00000000 uart_buffer
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2115   .bss.huart1:00000000 huart1
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1164   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1170   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1214   .text.HAL_UART_ErrorCallback:00000020 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1222   .text.Error_Handler:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1228   .text.Error_Handler:00000000 Error_Handler
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1260   .text.MX_ADC1_Init:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1265   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1417   .text.MX_ADC1_Init:00000098 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2143   .bss.hadc1:00000000 hadc1
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1423   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1428   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1486   .text.MX_USART1_UART_Init:00000038 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1492   .text.MX_I2C1_Init:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1497   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 63


C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1555   .text.MX_I2C1_Init:0000002c $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2129   .bss.hi2c1:00000000 hi2c1
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1562   .text.MX_SPI2_Init:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1567   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1635   .text.MX_SPI2_Init:00000038 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2122   .bss.hspi2:00000000 hspi2
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1641   .text.SystemClock_Config:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1647   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1777   .text.main:00000000 $t
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1783   .text.main:00000000 main
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:1997   .text.main:00000108 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2076   .bss.adc_center:00000000 adc_center
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2062   .bss.adc_min:00000000 adc_min
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2055   .bss.adc_max:00000000 adc_max
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2069   .bss.adc_calib_error:00000000 adc_calib_error
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2012   .bss.last_toggle_time_aux2.0:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2018   .bss.last_toggle_time_aux1.1:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2024   .bss.last_toggle_time_robotid.2:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2031   .bss.beep_control:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2038   .bss.adc_filtered:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2045   .data.alpha:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2052   .bss.adc_max:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2059   .bss.adc_min:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2066   .bss.adc_calib_error:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2073   .bss.adc_center:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2080   .bss.uart_buffer:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2089   .bss.AUX3:00000000 AUX3
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2090   .bss.AUX3:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2096   .bss.AUX2:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2102   .bss.AUX1:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2105   .bss.adc_raw_buffer:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2112   .bss.huart1:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2119   .bss.hspi2:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2126   .bss.hi2c1:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2136   .bss.hdma_adc1:00000000 hdma_adc1
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2133   .bss.hdma_adc1:00000000 $d
C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s:2140   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GetTick
__aeabi_i2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2iz
__aeabi_f2uiz
__aeabi_ui2f
__aeabi_fsub
__aeabi_fadd
__aeabi_fcmpgt
__aeabi_fcmplt
HAL_Delay
NRF24_Comm_CanLocalControlWrite
NRF24_Comm_UpdateRobotID
ARM GAS  C:\Users\nzmjo\AppData\Local\Temp\ccyHeVog.s 			page 64


HAL_GPIO_ReadPin
NRF24_Comm_IRQ_Handler
NRF24_Comm_UpdateFromUART
HAL_UART_Receive_IT
nrf24_status
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_ADC_Start_DMA
NRF24_Comm_Init
NRF24_Comm_Transmit
NRF24_Comm_StatusFeedback

ARM GAS  C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"float_convert.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Bsp/Src/float_convert.cpp"
  18              		.section	.text.float32_to_float16,"ax",%progbits
  19              		.align	1
  20              		.global	float32_to_float16
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	float32_to_float16:
  26              	.LVL0:
  27              	.LFB0:
   1:Bsp/Src/float_convert.cpp **** #include "float_convert.hpp"
   2:Bsp/Src/float_convert.cpp **** #include <stdint.h>
   3:Bsp/Src/float_convert.cpp **** 
   4:Bsp/Src/float_convert.cpp **** uint16_t float32_to_float16(float f) {
  28              		.loc 1 4 38 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
   5:Bsp/Src/float_convert.cpp ****     union { float f; uint32_t u; } v = { f };
  33              		.loc 1 5 5 view .LVU1
   6:Bsp/Src/float_convert.cpp ****     uint32_t x = v.u;
  34              		.loc 1 6 5 view .LVU2
  35 0000 0346     		mov	r3, r0
  36              	.LVL1:
   7:Bsp/Src/float_convert.cpp **** 
   8:Bsp/Src/float_convert.cpp ****     uint32_t sign     = (x >> 31) & 0x1;
  37              		.loc 1 8 5 view .LVU3
   9:Bsp/Src/float_convert.cpp ****     int32_t  exponent = ((x >> 23) & 0xFF) - 127; // float32 bias is 127
  38              		.loc 1 9 5 view .LVU4
  39              		.loc 1 9 36 is_stmt 0 view .LVU5
  40 0002 C0F3C752 		ubfx	r2, r0, #23, #8
  41              		.loc 1 9 44 view .LVU6
  42 0006 7F3A     		subs	r2, r2, #127
  43              	.LVL2:
  10:Bsp/Src/float_convert.cpp ****     uint32_t mantissa = x & 0x7FFFFF;
  44              		.loc 1 10 5 is_stmt 1 view .LVU7
  11:Bsp/Src/float_convert.cpp **** 
  12:Bsp/Src/float_convert.cpp ****     uint16_t hsign = sign << 15;
  45              		.loc 1 12 5 view .LVU8
  46              		.loc 1 12 27 is_stmt 0 view .LVU9
ARM GAS  C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s 			page 2


  47 0008 C00F     		lsrs	r0, r0, #31
  48              	.LVL3:
  49              		.loc 1 12 14 view .LVU10
  50 000a C003     		lsls	r0, r0, #15
  51              	.LVL4:
  13:Bsp/Src/float_convert.cpp ****     int16_t hexponent;
  52              		.loc 1 13 5 is_stmt 1 view .LVU11
  14:Bsp/Src/float_convert.cpp ****     uint16_t hmantissa;
  53              		.loc 1 14 5 view .LVU12
  15:Bsp/Src/float_convert.cpp **** 
  16:Bsp/Src/float_convert.cpp ****     // Special case for zero
  17:Bsp/Src/float_convert.cpp ****     if (x == 0) {
  54              		.loc 1 17 5 view .LVU13
  55 000c 8BB1     		cbz	r3, .L4
  18:Bsp/Src/float_convert.cpp ****         return 0;
  19:Bsp/Src/float_convert.cpp ****     }
  20:Bsp/Src/float_convert.cpp **** 
  21:Bsp/Src/float_convert.cpp ****     if (exponent > 15) {
  56              		.loc 1 21 5 view .LVU14
  57 000e 0F2A     		cmp	r2, #15
  58 0010 0CDC     		bgt	.L5
  22:Bsp/Src/float_convert.cpp ****         // Overflow for float16 (max exponent is 15), return inf
  23:Bsp/Src/float_convert.cpp ****         return hsign | (0x1F << 10);
  24:Bsp/Src/float_convert.cpp ****     } else if (exponent > -15) {
  59              		.loc 1 24 12 view .LVU15
  60 0012 12F10E0F 		cmn	r2, #14
  61 0016 0DDB     		blt	.L2
  25:Bsp/Src/float_convert.cpp ****         // Normal float16
  26:Bsp/Src/float_convert.cpp ****         hexponent = exponent + 15;
  62              		.loc 1 26 9 view .LVU16
  63              		.loc 1 26 30 is_stmt 0 view .LVU17
  64 0018 0F32     		adds	r2, r2, #15
  65              	.LVL5:
  66              		.loc 1 26 19 view .LVU18
  67 001a 12B2     		sxth	r2, r2
  68              	.LVL6:
  27:Bsp/Src/float_convert.cpp ****         hmantissa = mantissa >> 13; // 23 - 10
  69              		.loc 1 27 9 is_stmt 1 view .LVU19
  70              		.loc 1 27 30 is_stmt 0 view .LVU20
  71 001c C3F34933 		ubfx	r3, r3, #13, #10
  72              	.LVL7:
  28:Bsp/Src/float_convert.cpp ****         return hsign | (hexponent << 10) | hmantissa;
  73              		.loc 1 28 9 is_stmt 1 view .LVU21
  74              		.loc 1 28 22 is_stmt 0 view .LVU22
  75 0020 40EA8220 		orr	r0, r0, r2, lsl #10
  76              	.LVL8:
  77              		.loc 1 28 22 view .LVU23
  78 0024 00B2     		sxth	r0, r0
  79              		.loc 1 28 42 view .LVU24
  80 0026 1843     		orrs	r0, r0, r3
  81              		.loc 1 28 44 view .LVU25
  82 0028 80B2     		uxth	r0, r0
  83 002a 7047     		bx	lr
  84              	.LVL9:
  85              	.L5:
  23:Bsp/Src/float_convert.cpp ****     } else if (exponent > -15) {
  86              		.loc 1 23 9 is_stmt 1 view .LVU26
ARM GAS  C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s 			page 3


  23:Bsp/Src/float_convert.cpp ****     } else if (exponent > -15) {
  87              		.loc 1 23 35 is_stmt 0 view .LVU27
  88 002c 40F4F840 		orr	r0, r0, #31744
  89              	.LVL10:
  23:Bsp/Src/float_convert.cpp ****     } else if (exponent > -15) {
  90              		.loc 1 23 35 view .LVU28
  91 0030 7047     		bx	lr
  92              	.LVL11:
  93              	.L4:
  18:Bsp/Src/float_convert.cpp ****     }
  94              		.loc 1 18 16 view .LVU29
  95 0032 0020     		movs	r0, #0
  96              	.LVL12:
  97              	.L2:
  29:Bsp/Src/float_convert.cpp ****     } else {
  30:Bsp/Src/float_convert.cpp ****         // Underflow ¡ú too small ¡ú return zero
  31:Bsp/Src/float_convert.cpp ****         return hsign;
  32:Bsp/Src/float_convert.cpp ****     }
  33:Bsp/Src/float_convert.cpp **** }
  98              		.loc 1 33 1 view .LVU30
  99 0034 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE0:
 103              		.section	.text.float16_to_float32,"ax",%progbits
 104              		.align	1
 105              		.global	float16_to_float32
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	float16_to_float32:
 111              	.LVL13:
 112              	.LFB1:
  34:Bsp/Src/float_convert.cpp **** 
  35:Bsp/Src/float_convert.cpp **** float float16_to_float32(uint16_t h) {
 113              		.loc 1 35 38 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
  36:Bsp/Src/float_convert.cpp ****     uint32_t sign     = (h >> 15) & 0x1;
 118              		.loc 1 36 5 view .LVU32
 119              		.loc 1 36 28 is_stmt 0 view .LVU33
 120 0000 C10B     		lsrs	r1, r0, #15
 121              	.LVL14:
  37:Bsp/Src/float_convert.cpp ****     int32_t  exponent = ((h >> 10) & 0x1F) - 15; // float16 bias is 15
 122              		.loc 1 37 5 is_stmt 1 view .LVU34
 123              		.loc 1 37 36 is_stmt 0 view .LVU35
 124 0002 C0F38423 		ubfx	r3, r0, #10, #5
 125              		.loc 1 37 14 view .LVU36
 126 0006 A3F10F0C 		sub	ip, r3, #15
 127              	.LVL15:
  38:Bsp/Src/float_convert.cpp ****     uint32_t mantissa = h & 0x3FF;
 128              		.loc 1 38 5 is_stmt 1 view .LVU37
 129              		.loc 1 38 14 is_stmt 0 view .LVU38
 130 000a C0F30902 		ubfx	r2, r0, #0, #10
 131              	.LVL16:
  39:Bsp/Src/float_convert.cpp **** 
ARM GAS  C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s 			page 4


  40:Bsp/Src/float_convert.cpp ****     uint32_t f32;
 132              		.loc 1 40 5 is_stmt 1 view .LVU39
  41:Bsp/Src/float_convert.cpp ****     
  42:Bsp/Src/float_convert.cpp ****     if (exponent == 16) {
 133              		.loc 1 42 5 view .LVU40
 134 000e 1F2B     		cmp	r3, #31
 135 0010 0AD0     		beq	.L10
  43:Bsp/Src/float_convert.cpp ****         // Infinity or NaN
  44:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | (0xFF << 23) | (mantissa << 13);
  45:Bsp/Src/float_convert.cpp ****     } else if (exponent == -15 && mantissa == 0) {
 136              		.loc 1 45 12 view .LVU41
 137 0012 1CF10F0F 		cmn	ip, #15
 138 0016 0DD0     		beq	.L11
 139              	.L9:
  46:Bsp/Src/float_convert.cpp ****         // Zero
  47:Bsp/Src/float_convert.cpp ****         f32 = sign << 31;
  48:Bsp/Src/float_convert.cpp ****     } else {
  49:Bsp/Src/float_convert.cpp ****         // Normal number
  50:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | ((exponent + 127) << 23) | (mantissa << 13);
 140              		.loc 1 50 9 view .LVU42
 141              		.loc 1 50 41 is_stmt 0 view .LVU43
 142 0018 03F17000 		add	r0, r3, #112
 143              	.LVL17:
 144              		.loc 1 50 48 view .LVU44
 145 001c C005     		lsls	r0, r0, #23
 146              		.loc 1 50 28 view .LVU45
 147 001e 40EAC170 		orr	r0, r0, r1, lsl #31
 148              		.loc 1 50 13 view .LVU46
 149 0022 40EA4230 		orr	r0, r0, r2, lsl #13
 150              	.LVL18:
  51:Bsp/Src/float_convert.cpp ****     }
  52:Bsp/Src/float_convert.cpp **** 
  53:Bsp/Src/float_convert.cpp ****     union { uint32_t u; float f; } v;
 151              		.loc 1 53 5 is_stmt 1 view .LVU47
  54:Bsp/Src/float_convert.cpp ****     v.u = f32;
 152              		.loc 1 54 5 view .LVU48
  55:Bsp/Src/float_convert.cpp ****     return v.f;
 153              		.loc 1 55 5 view .LVU49
  56:Bsp/Src/float_convert.cpp **** } ...
 154              		.loc 1 56 1 is_stmt 0 view .LVU50
 155 0026 7047     		bx	lr
 156              	.LVL19:
 157              	.L10:
  44:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | (0xFF << 23) | (mantissa << 13);
 158              		.loc 1 44 9 is_stmt 1 view .LVU51
  44:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | (0xFF << 23) | (mantissa << 13);
 159              		.loc 1 44 55 is_stmt 0 view .LVU52
 160 0028 5003     		lsls	r0, r2, #13
 161              	.LVL20:
  44:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | (0xFF << 23) | (mantissa << 13);
 162              		.loc 1 44 43 view .LVU53
 163 002a 40EAC170 		orr	r0, r0, r1, lsl #31
  44:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | (0xFF << 23) | (mantissa << 13);
 164              		.loc 1 44 13 view .LVU54
 165 002e 40F0FF40 		orr	r0, r0, #2139095040
 166              	.LVL21:
  44:Bsp/Src/float_convert.cpp ****         f32 = (sign << 31) | (0xFF << 23) | (mantissa << 13);
ARM GAS  C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s 			page 5


 167              		.loc 1 44 13 view .LVU55
 168 0032 7047     		bx	lr
 169              	.LVL22:
 170              	.L11:
  45:Bsp/Src/float_convert.cpp ****     } else if (exponent == -15 && mantissa == 0) {
 171              		.loc 1 45 32 discriminator 1 view .LVU56
 172 0034 002A     		cmp	r2, #0
 173 0036 EFD1     		bne	.L9
  47:Bsp/Src/float_convert.cpp ****         f32 = sign << 31;
 174              		.loc 1 47 9 is_stmt 1 view .LVU57
  47:Bsp/Src/float_convert.cpp ****         f32 = sign << 31;
 175              		.loc 1 47 13 is_stmt 0 view .LVU58
 176 0038 C807     		lsls	r0, r1, #31
 177              	.LVL23:
  47:Bsp/Src/float_convert.cpp ****         f32 = sign << 31;
 178              		.loc 1 47 13 view .LVU59
 179 003a 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE1:
 183              		.text
 184              	.Letext0:
 185              		.file 2 "c:\\msys64\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 186              		.file 3 "c:\\msys64\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 float_convert.cpp
C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s:19     .text.float32_to_float16:00000000 $t
C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s:25     .text.float32_to_float16:00000000 float32_to_float16
C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s:104    .text.float16_to_float32:00000000 $t
C:\Users\l1234\AppData\Local\Temp\ccUgVAc4.s:110    .text.float16_to_float32:00000000 float16_to_float32

NO UNDEFINED SYMBOLS
